{"ast":null,"code":"var _jsxFileName = \"/Users/faybennett/outlierTasks/game-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\n\n// Types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Constants\nconst SAVE_KEY = \"apocalypse-idle-save\";\nconst AUTO_SAVE_INTERVAL = 10000; // 10 secon\nconst DISASTER_CHANCE = 0.002;\nconst AI_ATTACK_CHANCE = 0.02;\nconst HOUSE_CAPACITY = 2;\nconst UNHOUSED_SURVIVOR_DEATH_RATE = 0.01;\nconst EXPLORATION_COST = {\n  materials: 20\n};\nconst initialResources = {\n  food: 100,\n  water: 100,\n  materials: 50,\n  survivors: 5\n};\nconst disasters = [{\n  id: \"raiders\",\n  name: \"Raider Attack!\",\n  description: \"Raiders have attacked your base!\",\n  effect: {\n    food: -20,\n    water: -15,\n    materials: -10\n  }\n}, {\n  id: \"drought\",\n  name: \"Drought\",\n  description: \"Water supplies are running low!\",\n  effect: {\n    water: -30\n  }\n}, {\n  id: \"sickness\",\n  name: \"Disease Outbreak\",\n  description: \"A disease has spread through your camp!\",\n  effect: {\n    survivors: -1,\n    food: -10\n  }\n}];\n\n// Update icon components to accept className props\nconst FoodIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M18 8h1a4 4 0 0 1 0 8h-1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"6\",\n    y1: \"1\",\n    x2: \"6\",\n    y2: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"10\",\n    y1: \"1\",\n    x2: \"10\",\n    y2: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"14\",\n    y1: \"1\",\n    x2: \"14\",\n    y2: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 3\n}, this);\n_c = FoodIcon;\nconst WaterIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 3\n}, this);\n_c2 = WaterIcon;\nconst MaterialsIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 140,\n  columnNumber: 3\n}, this);\n_c3 = MaterialsIcon;\nconst SurvivorsIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"9\",\n    cy: \"7\",\n    r: \"4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M23 21v-2a4 4 0 0 0-3-3.87\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M16 3.13a4 4 0 0 1 0 7.75\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 146,\n  columnNumber: 3\n}, this);\n_c4 = SurvivorsIcon;\nconst BaseIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n    points: \"9 22 9 12 15 12 15 22\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 155,\n  columnNumber: 3\n}, this);\n_c5 = BaseIcon;\nconst ResourcesIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"16\",\n    y1: \"8\",\n    x2: \"2\",\n    y2: \"22\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"17.5\",\n    y1: \"15\",\n    x2: \"9\",\n    y2: \"15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 162,\n  columnNumber: 3\n}, this);\n_c6 = ResourcesIcon;\nconst AttackIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M12 19l7-7 3 3-7 7-3-3z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M2 2l7.586 7.586\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 170,\n  columnNumber: 3\n}, this);\n_c7 = AttackIcon;\nconst ExploreIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n    points: \"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 179,\n  columnNumber: 3\n}, this);\n_c8 = ExploreIcon;\nconst CancelIcon = ({\n  className = \"h-8 w-8\"\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: className,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"18\",\n    y1: \"6\",\n    x2: \"6\",\n    y2: \"18\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"6\",\n    y1: \"6\",\n    x2: \"18\",\n    y2: \"18\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 186,\n  columnNumber: 3\n}, this);\n_c9 = CancelIcon;\nconst ApocalypticGame = () => {\n  _s();\n  // State\n  const [resources, setResources] = useState(initialResources);\n  const [activeTab, setActiveTab] = useState(\"resources\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [showRadialMenu, setShowRadialMenu] = useState(false);\n  const [radialMenuPosition, setRadialMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showDisaster, setShowDisaster] = useState(null);\n  const [autoScavengeEnabled, setAutoScavengeEnabled] = useState(true);\n  const [buildings, setBuildings] = useState([]);\n  const [scavengeResult, setScavengeResult] = useState(null);\n  const [showAttackResult, setShowAttackResult] = useState(null);\n  const [showAIAttack, setShowAIAttack] = useState(null); // New state for AI attack results\n  const [showAttackedAnimation, setShowAttackedAnimation] = useState(null); // New state for AI attack animation\n  const [showHowToPlay, setShowHowToPlay] = useState(false); // New state for How to Play popup\n\n  const [waitingForScavengePopup, setWaitingForScavengePopup] = useState(false);\n  const gameLoopRef = useRef(null);\n  const autoSaveRef = useRef(null);\n  const [upgrades, setUpgrades] = useState([{\n    id: \"farm\",\n    name: \"Makeshift Farm\",\n    description: \"Produces food over time\",\n    cost: {\n      materials: 50\n    },\n    effect: \"+5 food/minute\",\n    level: 0,\n    maxLevel: 5\n  }, {\n    id: \"well\",\n    name: \"Water Collector\",\n    description: \"Collects water from the atmosphere\",\n    cost: {\n      materials: 40\n    },\n    effect: \"+3 water/minute\",\n    level: 0,\n    maxLevel: 5\n  }, {\n    id: \"shelter\",\n    name: \"Survivor Shelter\",\n    description: \"Attracts new survivors\",\n    cost: {\n      materials: 100,\n      food: 50\n    },\n    effect: \"+1 survivor chance/hour\",\n    level: 0,\n    maxLevel: 3\n  }]);\n  const GRID_SIZE = 5;\n  const locationNames = [\"Dustfield\", \"Ashrock\", \"Ironpit\", \"Deadwell\", \"Cragpoint\", \"Burnpass\", \"Mudspire\", \"Wretchend\", \"Redhollow\", \"Saltmoor\", \"Scraptown\", \"Charcliff\", \"Dryreach\", \"Ragbank\", \"Blightden\", \"Boneplain\", \"Rustbarrow\", \"Smokefall\", \"Shivglen\", \"Flintgorge\", \"Gravefen\", \"Scorchbay\", \"Fogscar\", \"Ruinstep\", \"Crimsonlot\"];\n  const generateInitialGrid = () => {\n    const locations = [];\n    for (let y = 0; y < GRID_SIZE; y++) {\n      for (let x = 0; x < GRID_SIZE; x++) {\n        const isBase = x === Math.floor(GRID_SIZE / 2) && y === Math.floor(GRID_SIZE / 2);\n        locations.push({\n          id: `cell-${x}-${y}`,\n          name: isBase ? \"Your Base\" : locationNames[y * GRID_SIZE + x] || `Sector-${x}-${y}`,\n          isBase: isBase,\n          x,\n          y,\n          discovered: isBase,\n          scavengeTime: isBase ? 0 : 5000 + Math.floor(Math.random() * 5000),\n          lastScavenged: null,\n          resources: isBase ? {} : Math.random() < 0.8 // Increased chance of having resources on newly discovered locations\n          ? {\n            food: Math.floor(Math.random() * 50) + 10,\n            // Increased food range\n            water: Math.floor(Math.random() * 30) + 5,\n            // Increased water range\n            materials: Math.random() < 0.7 ? Math.floor(Math.random() * 60) + 10 : 0,\n            // Increased material chance and range\n            survivors: Math.random() < 0.3 ? 1 : 0 // Slightly increased survivor chance\n          } : {},\n          owner: isBase ? \"player\" : null // Set owner for base and null for others\n        });\n      }\n    }\n    return locations;\n  };\n  const [locations, setLocations] = useState(generateInitialGrid());\n  const availableBuildings = [{\n    id: \"house-blueprint\",\n    type: \"house\",\n    name: \"House\",\n    cost: {\n      materials: 30,\n      food: 10\n    },\n    level: 0,\n    imageUrl: \"https://img.icons8.com/ios-filled/50/ffffff/home.png\"\n  }\n  // { id: \"water-collector-blueprint\", type: \"water_collector\", name: \"Water Collector\", cost: { materials: 40 }, imageUrl: \"https://i.imgur.com/your-water-collector-image.png\" },\n  ];\n  const resourcesRef = useRef(resources);\n  const upgradesRef = useRef(upgrades);\n\n  // Update refs whenever state changes\n  useEffect(() => {\n    resourcesRef.current = resources;\n  }, [resources]);\n  useEffect(() => {\n    upgradesRef.current = upgrades;\n  }, [upgrades]);\n\n  // Responsive design\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n\n  // Load game\n  useEffect(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    if (savedGame) {\n      try {\n        const gameState = JSON.parse(savedGame);\n        const timePassed = Date.now() - gameState.lastSave;\n\n        // Calculate offline progression\n        const minutesPassed = timePassed / 60000;\n        const offlineResources = {\n          ...gameState.resources\n        };\n        gameState.upgrades.forEach(upgrade => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            offlineResources.food += Math.floor(minutesPassed * 5 * upgrade.level * 0.5); // 50% efficiency offline\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            offlineResources.water += Math.floor(minutesPassed * 3 * upgrade.level * 0.5);\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            offlineResources.survivors += Math.floor(minutesPassed * (1 / 60) * upgrade.level * 0.5);\n          }\n        });\n        setResources(offlineResources);\n        setUpgrades(gameState.upgrades);\n        setLocations(gameState.locations);\n        setAutoScavengeEnabled(gameState.autoScavengeEnabled);\n      } catch (e) {\n        console.error(\"Failed to load save:\", e);\n      }\n    }\n  }, []);\n\n  // Save game\n  const saveGame = useCallback(() => {\n    const gameState = {\n      resources,\n      upgrades,\n      locations,\n      lastSave: Date.now(),\n      autoScavengeEnabled\n    };\n    localStorage.setItem(SAVE_KEY, JSON.stringify(gameState));\n  }, [resources, upgrades, locations, autoScavengeEnabled]);\n\n  // Auto save\n  useEffect(() => {\n    autoSaveRef.current = setInterval(saveGame, AUTO_SAVE_INTERVAL);\n    return () => {\n      if (autoSaveRef.current) clearInterval(autoSaveRef.current);\n    };\n  }, [saveGame]);\n  function floorResources(res) {\n    return {\n      food: Math.floor(res.food),\n      water: Math.floor(res.water),\n      materials: Math.floor(res.materials),\n      survivors: Math.floor(res.survivors)\n    };\n  }\n  function isEqualResources(a, b) {\n    return a.food === b.food && a.water === b.water && a.materials === b.materials && a.survivors === b.survivors;\n  }\n\n  // Game loop\n  useEffect(() => {\n    gameLoopRef.current = setInterval(() => {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n\n        // Apply upgrade effects\n        upgrades.forEach(upgrade => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            newResources.food += 5 * upgrade.level / 60; // per second\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            newResources.water += 3 * upgrade.level / 60;\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            newResources.survivors += 1 * upgrade.level / 3600; // 1 per hour\n          }\n        });\n\n        // Housing check: survivors freeze and die if not enough houses\n        const totalHousingCapacity = buildings.filter(b => b.type === \"house\").length * HOUSE_CAPACITY;\n        const unhousedSurvivors = newResources.survivors - totalHousingCapacity;\n        if (unhousedSurvivors > 0 && Math.random() < UNHOUSED_SURVIVOR_DEATH_RATE * unhousedSurvivors) {\n          const lostSurvivors = Math.min(Math.ceil(unhousedSurvivors / 5), newResources.survivors); // Lose a fraction of unhoused survivors or at least 1\n          newResources.survivors = Math.max(0, newResources.survivors - lostSurvivors);\n          setShowDisaster({\n            id: \"exposure\",\n            name: \"Exposure!\",\n            description: `Some of your unhoused survivors froze to death! Lost ${lostSurvivors} survivor(s).`,\n            // Dynamic message\n            effect: {\n              survivors: -lostSurvivors\n            }\n          });\n        }\n\n        // Survivor consumption\n        newResources.food = Math.max(0, newResources.food - prev.survivors * 0.01);\n        newResources.water = Math.max(0, newResources.water - prev.survivors * 0.02);\n\n        // Floor and compare\n        const floored = floorResources(newResources);\n        if (!isEqualResources(floored, floorResources(prev))) {\n          return floored;\n        }\n        return prev; // Skip update if unchanged\n      });\n\n      // Check for disasters\n      if (Math.random() < DISASTER_CHANCE) {\n        const disaster = disasters[Math.floor(Math.random() * disasters.length)];\n        setShowDisaster(disaster);\n        applyDisaster(disaster);\n      }\n\n      // Check for AI attacks\n      if (Math.random() < AI_ATTACK_CHANCE) {\n        triggerAIAttack();\n      }\n\n      // Auto scavenging\n      if (autoScavengeEnabled) {\n        checkAutoScavenge();\n      }\n    }, 2000);\n    return () => {\n      if (gameLoopRef.current) clearInterval(gameLoopRef.current);\n    };\n  }, [upgrades, autoScavengeEnabled]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (waitingForScavengePopup || scavengeResult) return;\n      const finished = locations.find(loc => loc.lastScavenged && loc.scavengeTime > 0 && now - loc.lastScavenged >= loc.scavengeTime);\n      if (finished) finalizeScavenge(finished);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [locations, waitingForScavengePopup, scavengeResult]);\n  const applyDisaster = disaster => {\n    setResources(prev => ({\n      food: Math.max(0, prev.food + (disaster.effect.food || 0)),\n      water: Math.max(0, prev.water + (disaster.effect.water || 0)),\n      materials: Math.max(0, prev.materials + (disaster.effect.materials || 0)),\n      survivors: Math.max(1, prev.survivors + (disaster.effect.survivors || 0))\n    }));\n  };\n  const checkAutoScavenge = () => {\n    if (waitingForScavengePopup) return;\n    const now = Date.now();\n    setLocations(prev => {\n      let hasActiveScavenge = false;\n      let updated = false;\n      const newLocations = prev.map(loc => {\n        if (loc.lastScavenged && loc.scavengeTime > 0) {\n          if (now - loc.lastScavenged >= loc.scavengeTime && !updated) {\n            const loot = {\n              food: loc.resources.food || 0,\n              water: loc.resources.water || 0,\n              materials: loc.resources.materials || 0,\n              survivors: loc.resources.survivors || 0\n            };\n            finalizeScavenge(loc);\n            updated = true;\n            return loc;\n          }\n          hasActiveScavenge = true;\n          return loc;\n        }\n        return loc;\n      });\n      if (!hasActiveScavenge && !updated) {\n        // Start auto-scavenge on the first available location\n        const targetIndex = newLocations.findIndex(loc => loc.discovered && !loc.lastScavenged && loc.scavengeTime > 0 && Object.values(loc.resources).some(v => v && v > 0));\n        if (targetIndex !== -1) {\n          newLocations[targetIndex] = {\n            ...newLocations[targetIndex],\n            lastScavenged: now\n          };\n          updated = true;\n        }\n      }\n      return newLocations;\n    });\n  };\n\n  // Add notifications state\n  const [notifications, setNotifications] = useState([]);\n\n  // Add notification function\n  const addNotification = (message, type = 'info') => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, {\n      id,\n      message,\n      type,\n      timestamp: Date.now()\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, 5000);\n  };\n\n  // Update finalizeScavenge to use notifications\n  const finalizeScavenge = location => {\n    const loot = {\n      food: location.resources.food || 0,\n      water: location.resources.water || 0,\n      materials: location.resources.materials || 0,\n      survivors: location.resources.survivors || 0\n    };\n\n    // Create notification message\n    const resourceMessages = Object.entries(loot).filter(([_, value]) => value > 0).map(([resource, value]) => `${value} ${resource}`).join(', ');\n    if (resourceMessages) {\n      addNotification(`Found resources: ${resourceMessages}`, 'success');\n    }\n    setResources(prevResources => ({\n      food: prevResources.food + loot.food,\n      water: prevResources.water + loot.water,\n      materials: prevResources.materials + loot.materials,\n      survivors: prevResources.survivors + loot.survivors\n    }));\n    setLocations(prev => prev.map(loc => loc.id === location.id ? {\n      ...loc,\n      lastScavenged: null,\n      resources: {},\n      wasScavenged: true\n    } : loc));\n  };\n  const handleMapClick = (e, location) => {\n    e.stopPropagation();\n    if (!location.discovered && location.id !== \"base\") return;\n    setSelectedLocation(location);\n    setRadialMenuPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setShowRadialMenu(true);\n  };\n  const scavengeLocation = location => {\n    if (location.lastScavenged || location.scavengeTime === 0) return;\n    setLocations(prev => prev.map(loc => loc.id === location.id ? {\n      ...loc,\n      lastScavenged: Date.now()\n    } : loc));\n    setShowRadialMenu(false);\n  };\n  const exploreNearby = () => {\n    if (!selectedLocation) return;\n    const cost = EXPLORATION_COST;\n    const canAfford = Object.entries(cost).every(([resource, amount]) => resources[resource] >= (amount || 0));\n    if (!canAfford) {\n      // Show a message that you can't afford to explore\n      setShowAttackResult({\n        success: false,\n        locationName: \"Exploration\",\n        survivorsLost: 0\n      });\n      setShowRadialMenu(false);\n      return;\n    }\n\n    // Deduct cost\n    setResources(prev => {\n      const newResources = {\n        ...prev\n      };\n      Object.entries(cost).forEach(([resource, amount]) => {\n        newResources[resource] -= amount || 0;\n      });\n      return newResources;\n    });\n    const getGridCoords = id => {\n      const match = id.match(/cell-(\\d+)-(\\d+)/);\n      if (!match) return null;\n      return {\n        x: parseInt(match[1]),\n        y: parseInt(match[2])\n      };\n    };\n    const selectedCoords = getGridCoords(selectedLocation.id);\n    if (!selectedCoords) return;\n    setLocations(prev => prev.map(loc => {\n      const coords = getGridCoords(loc.id);\n      if (!coords || loc.discovered) return loc;\n      const dx = Math.abs(coords.x - selectedCoords.x);\n      const dy = Math.abs(coords.y - selectedCoords.y);\n      if (dx <= 1 && dy <= 1) {\n        return {\n          ...loc,\n          discovered: true\n        };\n      }\n      return loc;\n    }));\n    setShowRadialMenu(false);\n  };\n  const purchaseUpgrade = upgrade => {\n    if (upgrade.level >= upgrade.maxLevel) return;\n    const canAfford = Object.entries(upgrade.cost).every(([resource, cost]) => resources[resource] >= (cost || 0));\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(upgrade.cost).forEach(([resource, cost]) => {\n          newResources[resource] -= cost || 0;\n        });\n        return newResources;\n      });\n      setUpgrades(prev => prev.map(u => u.id === upgrade.id ? {\n        ...u,\n        level: u.level + 1,\n        cost: Object.fromEntries(Object.entries(u.cost).map(([r, c]) => [r, Math.floor((c || 0) * 1.5)]))\n      } : u));\n    }\n  };\n  const getScavengeProgress = location => {\n    if (!location.lastScavenged || location.scavengeTime === 0) return 0;\n    const elapsed = Date.now() - location.lastScavenged;\n    return Math.min(100, elapsed / location.scavengeTime * 100);\n  };\n  const attackLocation = location => {\n    const success = Math.random() < 0.7; // Increased to 70% chance of success\n\n    if (success) {\n      const materialsGained = 20 + Math.floor(Math.random() * 30);\n      setResources(prev => ({\n        ...prev,\n        materials: prev.materials + materialsGained\n      }));\n      setLocations(prev => prev.map(loc => loc.id === location.id ? {\n        ...loc,\n        owner: \"player\"\n      } : loc));\n      setShowAttackResult({\n        success: true,\n        locationName: location.name,\n        resourcesGained: {\n          materials: materialsGained\n        }\n      });\n      setShowAttackedAnimation(location.id); // Trigger red square animation\n    } else {\n      const survivorsLost = 1; // Always lose 1 survivor on failure\n      setResources(prev => ({\n        ...prev,\n        survivors: Math.max(0, prev.survivors - survivorsLost)\n      }));\n      setShowAttackResult({\n        success: false,\n        locationName: location.name,\n        survivorsLost: survivorsLost\n      });\n    }\n    setShowRadialMenu(false);\n  };\n  const buyBackLocation = location => {\n    const cost = {\n      materials: 50\n    }; // Example cost\n\n    const canAfford = Object.entries(cost).every(([resource, amount]) => resources[resource] >= (amount || 0));\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(cost).forEach(([resource, amount]) => {\n          newResources[resource] -= amount || 0;\n        });\n        return newResources;\n      });\n      setLocations(prev => prev.map(loc => loc.id === location.id ? {\n        ...loc,\n        owner: \"player\"\n      } : loc));\n      setShowAttackedAnimation(location.id); // Trigger red square animation\n      setShowRadialMenu(false);\n    } else {\n      // Optionally, add feedback for not being able to afford\n      console.log(\"Cannot afford to buy back this location.\");\n    }\n  };\n\n  // Add new state for first time user\n  const [isFirstTimeUser, setIsFirstTimeUser] = useState(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    return !savedGame;\n  });\n\n  // Add new state for game over\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  // Update startNewGame function\n  const startNewGame = () => {\n    setResources(initialResources);\n    setUpgrades(upgrades.map(upgrade => ({\n      ...upgrade,\n      level: 0\n    })));\n    setLocations(generateInitialGrid());\n    setBuildings([]);\n    setIsGameOver(false);\n    setIsFirstTimeUser(false);\n    setShowDisaster(null);\n    setShowAttackResult(null);\n    setShowAIAttack(null);\n    setScavengeResult(null);\n    setWaitingForScavengePopup(false);\n    setShowAttackedAnimation(null);\n    setSelectedLocation(null);\n    setShowRadialMenu(false);\n    localStorage.removeItem(SAVE_KEY); // Clear saved game from localStorage\n  };\n\n  // Clear attacked animation after a duration\n  useEffect(() => {\n    if (showAttackedAnimation) {\n      const timer = setTimeout(() => {\n        setShowAttackedAnimation(null);\n      }, 1500); // Animation duration\n      return () => clearTimeout(timer);\n    }\n  }, [showAttackedAnimation]);\n\n  // Update GameOver component\n  const GameOver = () => {\n    if (!isGameOver) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-red-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-red-500 mb-6 drop-shadow-md\",\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-lg mb-8\",\n          children: \"All your survivors have perished. The wasteland has claimed another settlement.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            className: \"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-green-600 to-green-800 hover:from-green-700 hover:to-green-900 text-white\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Update NewGame component\n  const NewGame = () => {\n    if (!isFirstTimeUser) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md\",\n          children: \"Welcome to Wasteland Survivor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-lg mb-8\",\n          children: \"Lead your survivors through the post-apocalyptic wasteland. Gather resources, expand your territory, and survive against all odds.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            className: \"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add Notifications component\n  const Notifications = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50 space-y-2\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 ${notification.type === 'success' ? 'bg-green-600' : notification.type === 'error' ? 'bg-red-600' : 'bg-blue-600'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white font-medium\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }, this)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 905,\n    columnNumber: 5\n  }, this);\n\n  // Add game over check to the game loop\n  useEffect(() => {\n    if (resources.survivors <= 0 && !isGameOver) {\n      setIsGameOver(true);\n    }\n  }, [resources.survivors, isGameOver]);\n\n  // Add back the triggerAIAttack function\n  const triggerAIAttack = () => {\n    const playerOwnedLocations = locations.filter(loc => loc.owner === \"player\" && !loc.isBase);\n    if (playerOwnedLocations.length > 0) {\n      const targetLocation = playerOwnedLocations[Math.floor(Math.random() * playerOwnedLocations.length)];\n      const success = Math.random() < 0.75; // Increased AI attack success chance\n\n      setShowAttackedAnimation(targetLocation.id); // Trigger red square animation\n\n      if (success) {\n        // AI takes over the location\n        setLocations(prev => prev.map(loc => loc.id === targetLocation.id ? {\n          ...loc,\n          owner: null\n        } : loc));\n        setResources(prev => ({\n          ...prev,\n          survivors: Math.max(0, prev.survivors - 1)\n        }));\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: true,\n          survivorsLost: 1\n        });\n      } else {\n        // Player successfully defended\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: false\n        });\n      }\n    }\n  };\n\n  // HowToPlay component\n  const HowToPlay = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-2xl shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md font-display\",\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200 text-lg space-y-4 text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome to Wasteland Survivor! Your goal is to lead your group of survivors through a post-apocalyptic world. Here's how to play:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Resources:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gather Food, Water, Materials, and manage your Survivors. These are essential for survival and progress.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Map & Exploration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on map locations to open a radial menu. You can Scavenge locations for resources, Attack rival locations to take them over, or Explore nearby to discover new areas. Exploring costs materials.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Buildings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"From the Resources panel, you can drag and drop buildings like Houses onto available map squares. Houses provide shelter for your survivors; without enough housing, survivors will freeze and die!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Upgrades:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Invest in base upgrades to increase your resource production and survivor attraction.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Threats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Beware of random Disasters and Rival Clan attacks. These events can deplete your resources and survivors, so be prepared!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Game Over:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The game ends if all your survivors are lost. You can always start a new game to try again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHowToPlay(false),\n          className: \"w-full mt-8 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\",\n          children: \"Got It!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-950 text-white font-outfit antialiased relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-0 opacity-10 pointer-events-none\",\n      style: {\n        backgroundImage: `url('https://www.transparenttextures.com/patterns/dust-and-stones.png')`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 7\n    }, this), !isGameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isMobile ?\n      /*#__PURE__*/\n      // Mobile layout with tabs\n      _jsxDEV(\"div\", {\n        className: \"relative z-10 px-2 py-4 h-screen flex flex-col bg-gray-950 bg-opacity-95 pointer-events-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-black text-center mb-4 text-white drop-shadow-lg leading-tight tracking-tight\",\n          children: [\"Wasteland\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 17\n          }, this), \"Survivor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-4 bg-gray-800 rounded-lg p-1 shadow-inner border border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"resources\"),\n            className: `flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${activeTab === \"resources\" ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"}`,\n            children: \"Resources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"map\"),\n            className: `flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${activeTab === \"map\" ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"}`,\n            children: \"Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 15\n        }, this), activeTab === \"resources\" ? /*#__PURE__*/_jsxDEV(ResourcePanel, {\n          resources: resources,\n          upgrades: upgrades,\n          autoScavengeEnabled: autoScavengeEnabled,\n          purchaseUpgrade: purchaseUpgrade,\n          setAutoScavengeEnabled: setAutoScavengeEnabled,\n          availableBuildings: availableBuildings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(MapView, {\n            buildings: buildings,\n            availableBuildings: availableBuildings,\n            setBuildings: setBuildings,\n            setResources: setResources,\n            locations: locations,\n            showAttackedAnimation: showAttackedAnimation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      // Desktop layout remains unchanged\n      _jsxDEV(\"div\", {\n        className: \"relative z-10 flex h-screen p-8 gap-8 bg-gray-950 bg-opacity-95\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl font-black mb-8 text-white drop-shadow-lg leading-tight text-center tracking-tight\",\n            children: [\"Wasteland\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 19\n            }, this), \"Survivor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ResourcePanel, {\n            resources: resources,\n            upgrades: upgrades,\n            autoScavengeEnabled: autoScavengeEnabled,\n            purchaseUpgrade: purchaseUpgrade,\n            setAutoScavengeEnabled: setAutoScavengeEnabled,\n            availableBuildings: availableBuildings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col h-full\",\n          children: /*#__PURE__*/_jsxDEV(MapView, {\n            buildings: buildings,\n            availableBuildings: availableBuildings,\n            setBuildings: setBuildings,\n            setResources: setResources,\n            locations: locations,\n            showAttackedAnimation: showAttackedAnimation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), !isGameOver && !isFirstTimeUser && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHowToPlay(true),\n      className: \"fixed bottom-4 right-4 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white z-40\",\n      children: \"How to Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 9\n    }, this), (showRadialMenu || showDisaster || scavengeResult || showAttackResult || showAIAttack || isGameOver || isFirstTimeUser || showHowToPlay) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center pointer-events-auto\",\n      onClick: e => {\n        if (e.target === e.currentTarget) {\n          // Only close if clicking the backdrop, not content\n          setShowRadialMenu(false);\n          setShowDisaster(null);\n          setScavengeResult(null);\n          setShowAttackResult(null);\n          setShowAIAttack(null);\n          setShowHowToPlay(false);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(RadialMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisasterPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScavengePopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AttackResultPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AIAttackPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NewGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1015,\n    columnNumber: 5\n  }, this);\n};\n_s(ApocalypticGame, \"xelkRyu1Wp4fC/V+6KMiO+pl0o4=\");\n_c0 = ApocalypticGame;\nexport default ApocalypticGame;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"FoodIcon\");\n$RefreshReg$(_c2, \"WaterIcon\");\n$RefreshReg$(_c3, \"MaterialsIcon\");\n$RefreshReg$(_c4, \"SurvivorsIcon\");\n$RefreshReg$(_c5, \"BaseIcon\");\n$RefreshReg$(_c6, \"ResourcesIcon\");\n$RefreshReg$(_c7, \"AttackIcon\");\n$RefreshReg$(_c8, \"ExploreIcon\");\n$RefreshReg$(_c9, \"CancelIcon\");\n$RefreshReg$(_c0, \"ApocalypticGame\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SAVE_KEY","AUTO_SAVE_INTERVAL","DISASTER_CHANCE","AI_ATTACK_CHANCE","HOUSE_CAPACITY","UNHOUSED_SURVIVOR_DEATH_RATE","EXPLORATION_COST","materials","initialResources","food","water","survivors","disasters","id","name","description","effect","FoodIcon","className","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","children","d","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","_c","WaterIcon","_c2","MaterialsIcon","_c3","SurvivorsIcon","cx","cy","r","_c4","BaseIcon","points","_c5","ResourcesIcon","_c6","AttackIcon","_c7","ExploreIcon","_c8","CancelIcon","_c9","ApocalypticGame","_s","resources","setResources","activeTab","setActiveTab","isMobile","setIsMobile","showRadialMenu","setShowRadialMenu","radialMenuPosition","setRadialMenuPosition","x","y","selectedLocation","setSelectedLocation","showDisaster","setShowDisaster","autoScavengeEnabled","setAutoScavengeEnabled","buildings","setBuildings","scavengeResult","setScavengeResult","showAttackResult","setShowAttackResult","showAIAttack","setShowAIAttack","showAttackedAnimation","setShowAttackedAnimation","showHowToPlay","setShowHowToPlay","waitingForScavengePopup","setWaitingForScavengePopup","gameLoopRef","autoSaveRef","upgrades","setUpgrades","cost","level","maxLevel","GRID_SIZE","locationNames","generateInitialGrid","locations","isBase","Math","floor","push","discovered","scavengeTime","random","lastScavenged","owner","setLocations","availableBuildings","type","imageUrl","resourcesRef","upgradesRef","current","checkMobile","window","innerWidth","addEventListener","removeEventListener","savedGame","localStorage","getItem","gameState","JSON","parse","timePassed","Date","now","lastSave","minutesPassed","offlineResources","forEach","upgrade","e","console","error","saveGame","setItem","stringify","setInterval","clearInterval","floorResources","res","isEqualResources","a","b","prev","newResources","totalHousingCapacity","filter","length","unhousedSurvivors","lostSurvivors","min","ceil","max","floored","disaster","applyDisaster","triggerAIAttack","checkAutoScavenge","interval","finished","find","loc","finalizeScavenge","hasActiveScavenge","updated","newLocations","map","loot","targetIndex","findIndex","Object","values","some","v","notifications","setNotifications","addNotification","message","toString","timestamp","setTimeout","n","location","resourceMessages","entries","_","value","resource","join","prevResources","wasScavenged","handleMapClick","stopPropagation","clientX","clientY","scavengeLocation","exploreNearby","canAfford","every","amount","success","locationName","survivorsLost","getGridCoords","match","parseInt","selectedCoords","coords","dx","abs","dy","purchaseUpgrade","u","fromEntries","c","getScavengeProgress","elapsed","attackLocation","materialsGained","resourcesGained","buyBackLocation","log","isFirstTimeUser","setIsFirstTimeUser","isGameOver","setIsGameOver","startNewGame","removeItem","timer","clearTimeout","GameOver","onClick","NewGame","Notifications","notification","playerOwnedLocations","targetLocation","locationId","HowToPlay","style","backgroundImage","backgroundSize","backgroundAttachment","ResourcePanel","MapView","target","currentTarget","RadialMenu","DisasterPopup","ScavengePopup","AttackResultPopup","AIAttackPopup","_c0","$RefreshReg$"],"sources":["/Users/faybennett/outlierTasks/game-app/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\n// Types\ninterface Resources {\n  food: number;\n  water: number;\n  materials: number;\n  survivors: number;\n}\n\ninterface BaseUpgrade {\n  id: string;\n  name: string;\n  description: string;\n  cost: Partial<Resources>;\n  effect: string;\n  level: number;\n  maxLevel: number;\n}\n\ninterface MapLocation {\n  id: string;\n  name: string;\n  x: number;\n  y: number;\n  discovered: boolean;\n  scavengeTime: number;\n  lastScavenged: number | null;\n  resources: Partial<Resources>;\n  isBase?: boolean; // Optional property to mark the base location\n  wasScavenged?: boolean; // Optional property to track if the location was already scavenged\n  owner?: string | null; // New property to track ownership\n}\n\ninterface Building {\n  id: string;\n  type: \"house\" | \"water_collector\"; // Define building types\n  locationId?: string; // The ID of the MapLocation this building is on (optional, for blueprints)\n  level: number;\n  imageUrl?: string; // Optional image URL for visual representation\n  name: string; // Added name property\n  cost: Partial<Resources>; // Added cost property\n}\n\ninterface Disaster {\n  id: string;\n  name: string;\n  description: string;\n  effect: Partial<Resources>;\n}\n\ninterface AIAttack {\n  locationId: string;\n  locationName: string;\n  success: boolean;\n  resourcesLost?: Partial<Resources>;\n  survivorsLost?: number;\n}\n\ninterface RadialMenuAction {\n  label: string;\n  icon: React.ReactNode;\n  enabled: boolean;\n  action: () => void;\n  cost?: Partial<Resources>;\n}\n\ninterface GameState {\n  resources: Resources;\n  upgrades: BaseUpgrade[];\n  locations: MapLocation[];\n  lastSave: number;\n  autoScavengeEnabled: boolean;\n}\n\ninterface Notification {\n  id: string;\n  message: string;\n  type: 'success' | 'error' | 'info';\n  timestamp: number;\n}\n\n// Constants\nconst SAVE_KEY = \"apocalypse-idle-save\";\nconst AUTO_SAVE_INTERVAL = 10000; // 10 secon\nconst DISASTER_CHANCE = 0.002;\nconst AI_ATTACK_CHANCE = 0.02; \nconst HOUSE_CAPACITY = 2;\nconst UNHOUSED_SURVIVOR_DEATH_RATE = 0.01;\nconst EXPLORATION_COST = { \n  materials: 20\n};\n\nconst initialResources: Resources = {\n  food: 100,\n  water: 100,\n  materials: 50,\n  survivors: 5,\n};\n\nconst disasters: Disaster[] = [\n  {\n    id: \"raiders\",\n    name: \"Raider Attack!\",\n    description: \"Raiders have attacked your base!\",\n    effect: { food: -20, water: -15, materials: -10 },\n  },\n  {\n    id: \"drought\",\n    name: \"Drought\",\n    description: \"Water supplies are running low!\",\n    effect: { water: -30 },\n  },\n  {\n    id: \"sickness\",\n    name: \"Disease Outbreak\",\n    description: \"A disease has spread through your camp!\",\n    effect: { survivors: -1, food: -10 },\n  },\n];\n\n// Update icon components to accept className props\nconst FoodIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M18 8h1a4 4 0 0 1 0 8h-1\"></path>\n    <path d=\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"></path>\n    <line x1=\"6\" y1=\"1\" x2=\"6\" y2=\"4\"></line>\n    <line x1=\"10\" y1=\"1\" x2=\"10\" y2=\"4\"></line>\n    <line x1=\"14\" y1=\"1\" x2=\"14\" y2=\"4\"></line>\n  </svg>\n);\n\nconst WaterIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"></path>\n  </svg>\n);\n\nconst MaterialsIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"></path>\n  </svg>\n);\n\nconst SurvivorsIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n  </svg>\n);\n\nconst BaseIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n    <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n  </svg>\n);\n\nconst ResourcesIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"></path>\n    <line x1=\"16\" y1=\"8\" x2=\"2\" y2=\"22\"></line>\n    <line x1=\"17.5\" y1=\"15\" x2=\"9\" y2=\"15\"></line>\n  </svg>\n);\n\nconst AttackIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <path d=\"M12 19l7-7 3 3-7 7-3-3z\"></path>\n    <path d=\"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"></path>\n    <path d=\"M2 2l7.586 7.586\"></path>\n    <circle cx=\"11\" cy=\"11\" r=\"2\"></circle>\n  </svg>\n);\n\nconst ExploreIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n    <polygon points=\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"></polygon>\n  </svg>\n);\n\nconst CancelIcon = ({ className = \"h-8 w-8\" }: { className?: string }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n\nconst ApocalypticGame: React.FC = () => {\n  // State\n  const [resources, setResources] = useState<Resources>(initialResources);\n  const [activeTab, setActiveTab] = useState<\"resources\" | \"map\">(\"resources\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [showRadialMenu, setShowRadialMenu] = useState(false);\n  const [radialMenuPosition, setRadialMenuPosition] = useState({ x: 0, y: 0 });\n  const [selectedLocation, setSelectedLocation] = useState<MapLocation | null>(\n    null,\n  );\n  const [showDisaster, setShowDisaster] = useState<Disaster | null>(null);\n  const [autoScavengeEnabled, setAutoScavengeEnabled] = useState(true);\n  const [buildings, setBuildings] = useState<Building[]>([]);\n\n  const [scavengeResult, setScavengeResult] =\n    useState<Partial<Resources> | null>(null);\n  const [showAttackResult, setShowAttackResult] = useState<{ success: boolean; locationName: string; resourcesGained?: Partial<Resources>; survivorsLost?: number } | null>(null);\n  const [showAIAttack, setShowAIAttack] = useState<AIAttack | null>(null); // New state for AI attack results\n  const [showAttackedAnimation, setShowAttackedAnimation] = useState<string | null>(null); // New state for AI attack animation\n  const [showHowToPlay, setShowHowToPlay] = useState(false); // New state for How to Play popup\n\n  const [waitingForScavengePopup, setWaitingForScavengePopup] = useState(false);\n\n  const gameLoopRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  const autoSaveRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const [upgrades, setUpgrades] = useState<BaseUpgrade[]>([\n    {\n      id: \"farm\",\n      name: \"Makeshift Farm\",\n      description: \"Produces food over time\",\n      cost: { materials: 50 },\n      effect: \"+5 food/minute\",\n      level: 0,\n      maxLevel: 5,\n    },\n    {\n      id: \"well\",\n      name: \"Water Collector\",\n      description: \"Collects water from the atmosphere\",\n      cost: { materials: 40 },\n      effect: \"+3 water/minute\",\n      level: 0,\n      maxLevel: 5,\n    },\n    {\n      id: \"shelter\",\n      name: \"Survivor Shelter\",\n      description: \"Attracts new survivors\",\n      cost: { materials: 100, food: 50 },\n      effect: \"+1 survivor chance/hour\",\n      level: 0,\n      maxLevel: 3,\n    },\n  ]);\n\n  const GRID_SIZE = 5;\n\n  const locationNames = [\n    \"Dustfield\",\n    \"Ashrock\",\n    \"Ironpit\",\n    \"Deadwell\",\n    \"Cragpoint\",\n    \"Burnpass\",\n    \"Mudspire\",\n    \"Wretchend\",\n    \"Redhollow\",\n    \"Saltmoor\",\n    \"Scraptown\",\n    \"Charcliff\",\n    \"Dryreach\",\n    \"Ragbank\",\n    \"Blightden\",\n    \"Boneplain\",\n    \"Rustbarrow\",\n    \"Smokefall\",\n    \"Shivglen\",\n    \"Flintgorge\",\n    \"Gravefen\",\n    \"Scorchbay\",\n    \"Fogscar\",\n    \"Ruinstep\",\n    \"Crimsonlot\",\n  ];\n\n  const generateInitialGrid = (): MapLocation[] => {\n    const locations: MapLocation[] = [];\n\n    for (let y = 0; y < GRID_SIZE; y++) {\n      for (let x = 0; x < GRID_SIZE; x++) {\n        const isBase =\n          x === Math.floor(GRID_SIZE / 2) && y === Math.floor(GRID_SIZE / 2);\n\n        locations.push({\n          id: `cell-${x}-${y}`,\n          name: isBase\n            ? \"Your Base\"\n            : locationNames[y * GRID_SIZE + x] || `Sector-${x}-${y}`,\n          isBase: isBase,\n          x,\n          y,\n          discovered: isBase,\n          scavengeTime: isBase ? 0 : 5000 + Math.floor(Math.random() * 5000),\n          lastScavenged: null,\n          resources: isBase\n            ? {}\n            : Math.random() < 0.8 // Increased chance of having resources on newly discovered locations\n            ? {\n                food: Math.floor(Math.random() * 50) + 10, // Increased food range\n                water: Math.floor(Math.random() * 30) + 5, // Increased water range\n                materials:\n                  Math.random() < 0.7 ? Math.floor(Math.random() * 60) + 10 : 0, // Increased material chance and range\n                survivors: Math.random() < 0.3 ? 1 : 0, // Slightly increased survivor chance\n              }\n            : {},\n          owner: isBase ? \"player\" : null, // Set owner for base and null for others\n        });\n      }\n    }\n\n    return locations;\n  };\n\n  const [locations, setLocations] = useState<MapLocation[]>(\n    generateInitialGrid(),\n  );\n\n  const availableBuildings: Building[] = [\n    { id: \"house-blueprint\", type: \"house\", name: \"House\", cost: { materials: 30, food: 10 }, level: 0, imageUrl: \"https://img.icons8.com/ios-filled/50/ffffff/home.png\" },\n    // { id: \"water-collector-blueprint\", type: \"water_collector\", name: \"Water Collector\", cost: { materials: 40 }, imageUrl: \"https://i.imgur.com/your-water-collector-image.png\" },\n  ];\n\n  const resourcesRef = useRef(resources);\n  const upgradesRef = useRef(upgrades);\n\n  // Update refs whenever state changes\n  useEffect(() => {\n    resourcesRef.current = resources;\n  }, [resources]);\n  useEffect(() => {\n    upgradesRef.current = upgrades;\n  }, [upgrades]);\n\n  // Responsive design\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n\n  // Load game\n  useEffect(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    if (savedGame) {\n      try {\n        const gameState: GameState = JSON.parse(savedGame);\n        const timePassed = Date.now() - gameState.lastSave;\n\n        // Calculate offline progression\n        const minutesPassed = timePassed / 60000;\n        const offlineResources = { ...gameState.resources };\n\n        gameState.upgrades.forEach((upgrade) => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            offlineResources.food += Math.floor(\n              minutesPassed * 5 * upgrade.level * 0.5,\n            ); // 50% efficiency offline\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            offlineResources.water += Math.floor(\n              minutesPassed * 3 * upgrade.level * 0.5,\n            );\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            offlineResources.survivors += Math.floor(\n              minutesPassed * (1 / 60) * upgrade.level * 0.5,\n            );\n          }\n        });\n\n        setResources(offlineResources);\n        setUpgrades(gameState.upgrades);\n        setLocations(gameState.locations);\n        setAutoScavengeEnabled(gameState.autoScavengeEnabled);\n      } catch (e) {\n        console.error(\"Failed to load save:\", e);\n      }\n    }\n  }, []);\n\n  // Save game\n  const saveGame = useCallback(() => {\n    const gameState: GameState = {\n      resources,\n      upgrades,\n      locations,\n      lastSave: Date.now(),\n      autoScavengeEnabled,\n    };\n    localStorage.setItem(SAVE_KEY, JSON.stringify(gameState));\n  }, [resources, upgrades, locations, autoScavengeEnabled]);\n\n  // Auto save\n  useEffect(() => {\n    autoSaveRef.current = setInterval(saveGame, AUTO_SAVE_INTERVAL);\n    return () => {\n      if (autoSaveRef.current) clearInterval(autoSaveRef.current);\n    };\n  }, [saveGame]);\n\n  function floorResources(res: Resources): Resources {\n    return {\n      food: Math.floor(res.food),\n      water: Math.floor(res.water),\n      materials: Math.floor(res.materials),\n      survivors: Math.floor(res.survivors),\n    };\n  }\n\n  function isEqualResources(a: Resources, b: Resources): boolean {\n    return (\n      a.food === b.food &&\n      a.water === b.water &&\n      a.materials === b.materials &&\n      a.survivors === b.survivors\n    );\n  }\n\n  // Game loop\n  useEffect(() => {\n    gameLoopRef.current = setInterval(() => {\n      setResources((prev) => {\n        const newResources = { ...prev };\n\n        // Apply upgrade effects\n        upgrades.forEach((upgrade) => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            newResources.food += (5 * upgrade.level) / 60; // per second\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            newResources.water += (3 * upgrade.level) / 60;\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            newResources.survivors += (1 * upgrade.level) / 3600; // 1 per hour\n          }\n        });\n\n        // Housing check: survivors freeze and die if not enough houses\n        const totalHousingCapacity = buildings.filter(b => b.type === \"house\").length * HOUSE_CAPACITY;\n        const unhousedSurvivors = newResources.survivors - totalHousingCapacity;\n        \n        if (unhousedSurvivors > 0 && Math.random() < UNHOUSED_SURVIVOR_DEATH_RATE * unhousedSurvivors) {\n          const lostSurvivors = Math.min(Math.ceil(unhousedSurvivors / 5), newResources.survivors); // Lose a fraction of unhoused survivors or at least 1\n          newResources.survivors = Math.max(0, newResources.survivors - lostSurvivors);\n          setShowDisaster({\n            id: \"exposure\",\n            name: \"Exposure!\",\n            description: `Some of your unhoused survivors froze to death! Lost ${lostSurvivors} survivor(s).`, // Dynamic message\n            effect: { survivors: -lostSurvivors },\n          });\n        }\n\n        // Survivor consumption\n        newResources.food = Math.max(\n          0,\n          newResources.food - prev.survivors * 0.01,\n        );\n        newResources.water = Math.max(\n          0,\n          newResources.water - prev.survivors * 0.02,\n        );\n\n        // Floor and compare\n        const floored = floorResources(newResources);\n        if (!isEqualResources(floored, floorResources(prev))) {\n          return floored;\n        }\n        return prev; // Skip update if unchanged\n      });\n\n      // Check for disasters\n      if (Math.random() < DISASTER_CHANCE) {\n        const disaster =\n          disasters[Math.floor(Math.random() * disasters.length)];\n        setShowDisaster(disaster);\n        applyDisaster(disaster);\n      }\n\n      // Check for AI attacks\n      if (Math.random() < AI_ATTACK_CHANCE) {\n        triggerAIAttack();\n      }\n\n      // Auto scavenging\n      if (autoScavengeEnabled) {\n        checkAutoScavenge();\n      }\n    }, 2000);\n\n    return () => {\n      if (gameLoopRef.current) clearInterval(gameLoopRef.current);\n    };\n  }, [upgrades, autoScavengeEnabled]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (waitingForScavengePopup || scavengeResult) return;\n\n      const finished = locations.find(\n        (loc) =>\n          loc.lastScavenged &&\n          loc.scavengeTime > 0 &&\n          now - loc.lastScavenged >= loc.scavengeTime,\n      );\n\n      if (finished) finalizeScavenge(finished);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [locations, waitingForScavengePopup, scavengeResult]);\n\n  const applyDisaster = (disaster: Disaster) => {\n    setResources((prev) => ({\n      food: Math.max(0, prev.food + (disaster.effect.food || 0)),\n      water: Math.max(0, prev.water + (disaster.effect.water || 0)),\n      materials: Math.max(0, prev.materials + (disaster.effect.materials || 0)),\n      survivors: Math.max(1, prev.survivors + (disaster.effect.survivors || 0)),\n    }));\n  };\n\n  const checkAutoScavenge = () => {\n    if (waitingForScavengePopup) return;\n\n    const now = Date.now();\n\n    setLocations((prev) => {\n      let hasActiveScavenge = false;\n      let updated = false;\n\n      const newLocations = prev.map((loc) => {\n        if (loc.lastScavenged && loc.scavengeTime > 0) {\n          if (now - loc.lastScavenged >= loc.scavengeTime && !updated) {\n            const loot = {\n              food: loc.resources.food || 0,\n              water: loc.resources.water || 0,\n              materials: loc.resources.materials || 0,\n              survivors: loc.resources.survivors || 0,\n            };\n\n            finalizeScavenge(loc);\n            updated = true;\n            return loc;\n          }\n\n          hasActiveScavenge = true;\n          return loc;\n        }\n\n        return loc;\n      });\n\n      if (!hasActiveScavenge && !updated) {\n        // Start auto-scavenge on the first available location\n        const targetIndex = newLocations.findIndex(\n          (loc) =>\n            loc.discovered &&\n            !loc.lastScavenged &&\n            loc.scavengeTime > 0 &&\n            Object.values(loc.resources).some((v) => v && v > 0),\n        );\n\n        if (targetIndex !== -1) {\n          newLocations[targetIndex] = {\n            ...newLocations[targetIndex],\n            lastScavenged: now,\n          };\n          updated = true;\n        }\n      }\n\n      return newLocations;\n    });\n  };\n\n  // Add notifications state\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n\n  // Add notification function\n  const addNotification = (message: string, type: 'success' | 'error' | 'info' = 'info') => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, { id, message, type, timestamp: Date.now() }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, 5000);\n  };\n\n  // Update finalizeScavenge to use notifications\n  const finalizeScavenge = (location: MapLocation) => {\n    const loot = {\n      food: location.resources.food || 0,\n      water: location.resources.water || 0,\n      materials: location.resources.materials || 0,\n      survivors: location.resources.survivors || 0,\n    };\n\n    // Create notification message\n    const resourceMessages = Object.entries(loot)\n      .filter(([_, value]) => value > 0)\n      .map(([resource, value]) => `${value} ${resource}`)\n      .join(', ');\n    \n    if (resourceMessages) {\n      addNotification(`Found resources: ${resourceMessages}`, 'success');\n    }\n\n    setResources((prevResources) => ({\n      food: prevResources.food + loot.food,\n      water: prevResources.water + loot.water,\n      materials: prevResources.materials + loot.materials,\n      survivors: prevResources.survivors + loot.survivors,\n    }));\n\n    setLocations((prev) =>\n      prev.map((loc) =>\n        loc.id === location.id\n          ? { ...loc, lastScavenged: null, resources: {}, wasScavenged: true }\n          : loc,\n      ),\n    );\n  };\n\n  const handleMapClick = (\n    e: React.MouseEvent<HTMLDivElement>,\n    location: MapLocation,\n  ) => {\n    e.stopPropagation();\n    if (!location.discovered && location.id !== \"base\") return;\n\n    setSelectedLocation(location);\n    setRadialMenuPosition({ x: e.clientX, y: e.clientY });\n    setShowRadialMenu(true);\n  };\n\n  const scavengeLocation = (location: MapLocation) => {\n    if (location.lastScavenged || location.scavengeTime === 0) return;\n\n    setLocations((prev) =>\n      prev.map((loc) =>\n        loc.id === location.id ? { ...loc, lastScavenged: Date.now() } : loc,\n      ),\n    );\n    setShowRadialMenu(false);\n  };\n\n  const exploreNearby = () => {\n    if (!selectedLocation) return;\n\n    const cost = EXPLORATION_COST;\n    const canAfford = Object.entries(cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= (amount || 0)\n    );\n\n    if (!canAfford) {\n      // Show a message that you can't afford to explore\n      setShowAttackResult({\n        success: false,\n        locationName: \"Exploration\",\n        survivorsLost: 0,\n      });\n      setShowRadialMenu(false);\n      return;\n    }\n\n    // Deduct cost\n    setResources(prev => {\n      const newResources = { ...prev };\n      Object.entries(cost).forEach(([resource, amount]) => {\n        newResources[resource as keyof Resources] -= amount || 0;\n      });\n      return newResources;\n    });\n\n    const getGridCoords = (id: string) => {\n      const match = id.match(/cell-(\\d+)-(\\d+)/);\n      if (!match) return null;\n      return { x: parseInt(match[1]), y: parseInt(match[2]) };\n    };\n\n    const selectedCoords = getGridCoords(selectedLocation.id);\n    if (!selectedCoords) return;\n\n    setLocations((prev) =>\n      prev.map((loc) => {\n        const coords = getGridCoords(loc.id);\n        if (!coords || loc.discovered) return loc;\n\n        const dx = Math.abs(coords.x - selectedCoords.x);\n        const dy = Math.abs(coords.y - selectedCoords.y);\n\n        if (dx <= 1 && dy <= 1) {\n          return { ...loc, discovered: true };\n        }\n\n        return loc;\n      }),\n    );\n\n    setShowRadialMenu(false);\n  };\n\n  const purchaseUpgrade = (upgrade: BaseUpgrade) => {\n    if (upgrade.level >= upgrade.maxLevel) return;\n\n    const canAfford = Object.entries(upgrade.cost).every(\n      ([resource, cost]) =>\n        resources[resource as keyof Resources] >= (cost || 0),\n    );\n\n    if (canAfford) {\n      setResources((prev) => {\n        const newResources = { ...prev };\n        Object.entries(upgrade.cost).forEach(([resource, cost]) => {\n          newResources[resource as keyof Resources] -= cost || 0;\n        });\n        return newResources;\n      });\n\n      setUpgrades((prev) =>\n        prev.map((u) =>\n          u.id === upgrade.id\n            ? {\n                ...u,\n                level: u.level + 1,\n                cost: Object.fromEntries(\n                  Object.entries(u.cost).map(([r, c]) => [\n                    r,\n                    Math.floor((c || 0) * 1.5),\n                  ]),\n                ),\n              }\n            : u,\n        ),\n      );\n    }\n  };\n\n  const getScavengeProgress = (location: MapLocation) => {\n    if (!location.lastScavenged || location.scavengeTime === 0) return 0;\n    const elapsed = Date.now() - location.lastScavenged;\n    return Math.min(100, (elapsed / location.scavengeTime) * 100);\n  };\n\n  const attackLocation = (location: MapLocation) => {\n    const success = Math.random() < 0.7; // Increased to 70% chance of success\n\n    if (success) {\n      const materialsGained = 20 + Math.floor(Math.random() * 30);\n      setResources((prev) => ({\n        ...prev,\n        materials: prev.materials + materialsGained,\n      }));\n      setLocations((prev) =>\n        prev.map((loc) =>\n          loc.id === location.id ? { ...loc, owner: \"player\" } : loc,\n        ),\n      );\n      setShowAttackResult({\n        success: true,\n        locationName: location.name,\n        resourcesGained: { materials: materialsGained },\n      });\n      setShowAttackedAnimation(location.id); // Trigger red square animation\n    } else {\n      const survivorsLost = 1; // Always lose 1 survivor on failure\n      setResources((prev) => ({\n        ...prev,\n        survivors: Math.max(0, prev.survivors - survivorsLost),\n      }));\n      setShowAttackResult({\n        success: false,\n        locationName: location.name,\n        survivorsLost: survivorsLost,\n      });\n    }\n    setShowRadialMenu(false);\n  };\n\n  const buyBackLocation = (location: MapLocation) => {\n    const cost = { materials: 50 }; // Example cost\n\n    const canAfford = Object.entries(cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= (amount || 0)\n    );\n\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = { ...prev };\n        Object.entries(cost).forEach(([resource, amount]) => {\n          newResources[resource as keyof Resources] -= amount || 0;\n        });\n        return newResources;\n      });\n\n      setLocations(prev =>\n        prev.map(loc =>\n          loc.id === location.id ? { ...loc, owner: \"player\" } : loc\n        )\n      );\n      setShowAttackedAnimation(location.id); // Trigger red square animation\n      setShowRadialMenu(false);\n    } else {\n      // Optionally, add feedback for not being able to afford\n      console.log(\"Cannot afford to buy back this location.\");\n    }\n  };\n\n  // Add new state for first time user\n  const [isFirstTimeUser, setIsFirstTimeUser] = useState(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    return !savedGame;\n  });\n  \n  // Add new state for game over\n  const [isGameOver, setIsGameOver] = useState(false);\n  \n  // Update startNewGame function\n  const startNewGame = () => {\n    setResources(initialResources);\n    setUpgrades(upgrades.map(upgrade => ({ ...upgrade, level: 0 })));\n    setLocations(generateInitialGrid());\n    setBuildings([]);\n    setIsGameOver(false);\n    setIsFirstTimeUser(false);\n    setShowDisaster(null);\n    setShowAttackResult(null);\n    setShowAIAttack(null);\n    setScavengeResult(null);\n    setWaitingForScavengePopup(false);\n    setShowAttackedAnimation(null);\n    setSelectedLocation(null);\n    setShowRadialMenu(false);\n    localStorage.removeItem(SAVE_KEY); // Clear saved game from localStorage\n  };\n\n  // Clear attacked animation after a duration\n  useEffect(() => {\n    if (showAttackedAnimation) {\n      const timer = setTimeout(() => {\n        setShowAttackedAnimation(null);\n      }, 1500); // Animation duration\n      return () => clearTimeout(timer);\n    }\n  }, [showAttackedAnimation]);\n\n  // Update GameOver component\n  const GameOver = () => {\n    if (!isGameOver) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-red-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-red-500 mb-6 drop-shadow-md\">\n            Game Over\n          </h3>\n          <p className=\"text-gray-200 text-lg mb-8\">\n            All your survivors have perished. The wasteland has claimed another settlement.\n          </p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={startNewGame}\n              className=\"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-green-600 to-green-800 hover:from-green-700 hover:to-green-900 text-white\"\n            >\n              Start New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Update NewGame component\n  const NewGame = () => {\n    if (!isFirstTimeUser) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md\">\n            Welcome to Wasteland Survivor\n          </h3>\n          <p className=\"text-gray-200 text-lg mb-8\">\n            Lead your survivors through the post-apocalyptic wasteland. Gather resources, expand your territory, and survive against all odds.\n          </p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={startNewGame}\n              className=\"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\"\n            >\n              Start New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Add Notifications component\n  const Notifications = () => (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 ${\n            notification.type === 'success'\n              ? 'bg-green-600'\n              : notification.type === 'error'\n              ? 'bg-red-600'\n              : 'bg-blue-600'\n          }`}\n        >\n          <p className=\"text-white font-medium\">{notification.message}</p>\n        </div>\n      ))}\n    </div>\n  );\n\n  // Add game over check to the game loop\n  useEffect(() => {\n    if (resources.survivors <= 0 && !isGameOver) {\n      setIsGameOver(true);\n    }\n  }, [resources.survivors, isGameOver]);\n\n  // Add back the triggerAIAttack function\n  const triggerAIAttack = () => {\n    const playerOwnedLocations = locations.filter(\n      (loc) => loc.owner === \"player\" && !loc.isBase\n    );\n\n    if (playerOwnedLocations.length > 0) {\n      const targetLocation =\n        playerOwnedLocations[Math.floor(Math.random() * playerOwnedLocations.length)];\n      const success = Math.random() < 0.75; // Increased AI attack success chance\n\n      setShowAttackedAnimation(targetLocation.id); // Trigger red square animation\n\n      if (success) {\n        // AI takes over the location\n        setLocations((prev) =>\n          prev.map((loc) =>\n            loc.id === targetLocation.id ? { ...loc, owner: null } : loc\n          )\n        );\n        setResources((prev) => ({\n          ...prev,\n          survivors: Math.max(0, prev.survivors - 1),\n        }));\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: true,\n          survivorsLost: 1,\n        });\n      } else {\n        // Player successfully defended\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: false,\n        });\n      }\n    }\n  };\n\n  // HowToPlay component\n  const HowToPlay = () => {\n    if (!showHowToPlay) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-2xl shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md font-display\">\n            How to Play\n          </h3>\n          <div className=\"text-gray-200 text-lg space-y-4 text-left\">\n            <p>\n              Welcome to Wasteland Survivor! Your goal is to lead your group of survivors through a post-apocalyptic world. Here's how to play:\n            </p>\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Resources:</h4>\n            <p>Gather Food, Water, Materials, and manage your Survivors. These are essential for survival and progress.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Map & Exploration:</h4>\n            <p>Click on map locations to open a radial menu. You can Scavenge locations for resources, Attack rival locations to take them over, or Explore nearby to discover new areas. Exploring costs materials.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Buildings:</h4>\n            <p>From the Resources panel, you can drag and drop buildings like Houses onto available map squares. Houses provide shelter for your survivors; without enough housing, survivors will freeze and die!</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Upgrades:</h4>\n            <p>Invest in base upgrades to increase your resource production and survivor attraction.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Threats:</h4>\n            <p>Beware of random Disasters and Rival Clan attacks. These events can deplete your resources and survivors, so be prepared!</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Game Over:</h4>\n            <p>The game ends if all your survivors are lost. You can always start a new game to try again!</p>\n          </div>\n          <button\n            onClick={() => setShowHowToPlay(false)}\n            className=\"w-full mt-8 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\"\n          >\n            Got It!\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-950 text-white font-outfit antialiased relative overflow-hidden\">\n      {/* Add Notifications component */}\n      <Notifications />\n      \n      {/* Background overlay */}\n      <div \n        className=\"fixed inset-0 z-0 opacity-10 pointer-events-none\" \n        style={{ \n          backgroundImage: `url('https://www.transparenttextures.com/patterns/dust-and-stones.png')`, \n          backgroundSize: 'cover',\n          backgroundAttachment: 'fixed'\n        }}\n      ></div>\n      \n      {!isGameOver && (\n        <>\n          {isMobile ? (\n            // Mobile layout with tabs\n            <div className=\"relative z-10 px-2 py-4 h-screen flex flex-col bg-gray-950 bg-opacity-95 pointer-events-auto\">\n              <h1 className=\"text-3xl font-black text-center mb-4 text-white drop-shadow-lg leading-tight tracking-tight\">\n                Wasteland\n                <br />\n                Survivor\n              </h1>\n              <div className=\"flex mb-4 bg-gray-800 rounded-lg p-1 shadow-inner border border-gray-700\">\n                <button\n                  onClick={() => setActiveTab(\"resources\")}\n                  className={`flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${\n                    activeTab === \"resources\"\n                      ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"\n                  }`}\n                >\n                  Resources\n                </button>\n                <button\n                  onClick={() => setActiveTab(\"map\")}\n                  className={`flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${\n                    activeTab === \"map\"\n                      ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"\n                  }`}\n                >\n                  Map\n                </button>\n              </div>\n              {activeTab === \"resources\" ? (\n                <ResourcePanel\n                  resources={resources}\n                  upgrades={upgrades}\n                  autoScavengeEnabled={autoScavengeEnabled}\n                  purchaseUpgrade={purchaseUpgrade}\n                  setAutoScavengeEnabled={setAutoScavengeEnabled}\n                  availableBuildings={availableBuildings}\n                />\n              ) : (\n                <div className=\"flex-1 overflow-hidden\">\n                  <MapView\n                    buildings={buildings}\n                    availableBuildings={availableBuildings}\n                    setBuildings={setBuildings}\n                    setResources={setResources}\n                    locations={locations}\n                    showAttackedAnimation={showAttackedAnimation}\n                  />\n                </div>\n              )}\n            </div>\n          ) : (\n            // Desktop layout remains unchanged\n            <div className=\"relative z-10 flex h-screen p-8 gap-8 bg-gray-950 bg-opacity-95\">\n              <div className=\"w-1/2 flex flex-col\">\n                <h1 className=\"text-5xl font-black mb-8 text-white drop-shadow-lg leading-tight text-center tracking-tight\">\n                  Wasteland\n                  <br />\n                  Survivor\n                </h1>\n                <ResourcePanel\n                  resources={resources}\n                  upgrades={upgrades}\n                  autoScavengeEnabled={autoScavengeEnabled}\n                  purchaseUpgrade={purchaseUpgrade}\n                  setAutoScavengeEnabled={setAutoScavengeEnabled}\n                  availableBuildings={availableBuildings}\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col h-full\">\n                <MapView\n                  buildings={buildings}\n                  availableBuildings={availableBuildings}\n                  setBuildings={setBuildings}\n                  setResources={setResources}\n                  locations={locations}\n                  showAttackedAnimation={showAttackedAnimation}\n                />\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Global How to Play button */}\n      {!isGameOver && !isFirstTimeUser && (\n        <button\n          onClick={() => setShowHowToPlay(true)}\n          className=\"fixed bottom-4 right-4 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white z-40\"\n        >\n          How to Play\n        </button>\n      )}\n\n      {/* Conditionally render the popup container */}\n      {(showRadialMenu || showDisaster || scavengeResult || showAttackResult || showAIAttack || isGameOver || isFirstTimeUser || showHowToPlay) && (\n        <div \n          className=\"fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center pointer-events-auto\" \n          onClick={(e) => { \n            if (e.target === e.currentTarget) { // Only close if clicking the backdrop, not content\n              setShowRadialMenu(false);\n              setShowDisaster(null);\n              setScavengeResult(null);\n              setShowAttackResult(null);\n              setShowAIAttack(null);\n              setShowHowToPlay(false);\n            }\n          }}\n        >\n          <RadialMenu />\n          <DisasterPopup />\n          <ScavengePopup />\n          <AttackResultPopup />\n          <AIAttackPopup />\n          <GameOver />\n          <NewGame />\n          <HowToPlay />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ApocalypticGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}