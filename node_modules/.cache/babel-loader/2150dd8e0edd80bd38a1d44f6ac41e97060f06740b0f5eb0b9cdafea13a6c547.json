{"ast":null,"code":"var _jsxFileName = \"/Users/faybennett/outlierTasks/game-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ResourcePanel } from './components/ResourcePanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Constants\nconst SAVE_KEY = \"apocalypse-idle-save\";\nconst AUTO_SAVE_INTERVAL = 10000;\nconst DISASTER_CHANCE = 0.002;\nconst AI_ATTACK_CHANCE = 0.02;\nconst HOUSE_CAPACITY = 2;\nconst UNHOUSED_SURVIVOR_DEATH_RATE = 0.01;\nconst EXPLORATION_COST = {\n  materials: 20\n};\n\n// Initial state\nconst initialResources = {\n  food: 100,\n  water: 100,\n  materials: 50,\n  survivors: 5\n};\nconst initialUpgrades = [{\n  id: 'farm',\n  name: 'Makeshift Farm',\n  description: 'Produces food over time',\n  level: 0,\n  maxLevel: 5,\n  cost: {\n    materials: 50\n  },\n  effect: \"+5 food/minute\"\n}, {\n  id: 'well',\n  name: 'Water Collector',\n  description: 'Collects water from the atmosphere',\n  level: 0,\n  maxLevel: 5,\n  cost: {\n    materials: 40\n  },\n  effect: \"+3 water/minute\"\n}, {\n  id: 'shelter',\n  name: 'Survivor Shelter',\n  description: 'Attracts new survivors',\n  level: 0,\n  maxLevel: 3,\n  cost: {\n    materials: 100,\n    food: 50\n  },\n  effect: \"+1 survivor chance/hour\"\n}];\nconst disasters = [{\n  id: \"raiders\",\n  name: \"Raider Attack!\",\n  description: \"Raiders have attacked your base!\",\n  effect: {\n    food: -20,\n    water: -15,\n    materials: -10\n  }\n}, {\n  id: \"drought\",\n  name: \"Drought\",\n  description: \"Water supplies are running low!\",\n  effect: {\n    water: -30\n  }\n}, {\n  id: \"sickness\",\n  name: \"Disease Outbreak\",\n  description: \"A disease has spread through your camp!\",\n  effect: {\n    survivors: -1,\n    food: -10\n  }\n}];\nconst availableBuildings = [{\n  id: \"house-blueprint\",\n  type: \"house\",\n  name: \"House\",\n  cost: {\n    materials: 30,\n    food: 10\n  },\n  level: 0,\n  imageUrl: \"https://img.icons8.com/ios-filled/50/ffffff/home.png\"\n}];\nconst ApocalypticGame = () => {\n  _s();\n  // State\n  const [resources, setResources] = useState(initialResources);\n  const [upgrades, setUpgrades] = useState(initialUpgrades);\n  const [activeTab, setActiveTab] = useState(\"resources\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [showRadialMenu, setShowRadialMenu] = useState(false);\n  const [radialMenuPosition, setRadialMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showDisaster, setShowDisaster] = useState(null);\n  const [autoScavengeEnabled, setAutoScavengeEnabled] = useState(true);\n  const [buildings, setBuildings] = useState([]);\n  const [scavengeResult, setScavengeResult] = useState(null);\n  const [showAttackResult, setShowAttackResult] = useState(null);\n  const [showAIAttack, setShowAIAttack] = useState(null);\n  const [showAttackedAnimation, setShowAttackedAnimation] = useState(null);\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [waitingForScavengePopup, setWaitingForScavengePopup] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [isFirstTimeUser, setIsFirstTimeUser] = useState(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    return !savedGame;\n  });\n  const [isGameOver, setIsGameOver] = useState(false);\n  const gameLoopRef = useRef(null);\n  const autoSaveRef = useRef(null);\n  const GRID_SIZE = 5;\n  const locationNames = [\"Dustfield\", \"Ashrock\", \"Ironpit\", \"Deadwell\", \"Cragpoint\", \"Burnpass\", \"Mudspire\", \"Wretchend\", \"Redhollow\", \"Saltmoor\", \"Scraptown\", \"Charcliff\", \"Dryreach\", \"Ragbank\", \"Blightden\", \"Boneplain\", \"Rustbarrow\", \"Smokefall\", \"Shivglen\", \"Flintgorge\", \"Gravefen\", \"Scorchbay\", \"Fogscar\", \"Ruinstep\", \"Crimsonlot\"];\n  const generateInitialGrid = () => {\n    const locations = [];\n    for (let y = 0; y < GRID_SIZE; y++) {\n      for (let x = 0; x < GRID_SIZE; x++) {\n        const isBase = x === Math.floor(GRID_SIZE / 2) && y === Math.floor(GRID_SIZE / 2);\n        locations.push({\n          id: `cell-${x}-${y}`,\n          name: isBase ? \"Your Base\" : locationNames[y * GRID_SIZE + x] || `Sector-${x}-${y}`,\n          isBase: isBase,\n          x,\n          y,\n          discovered: isBase,\n          scavengeTime: isBase ? 0 : 5000 + Math.floor(Math.random() * 5000),\n          lastScavenged: null,\n          resources: isBase ? {} : Math.random() < 0.8 ? {\n            food: Math.floor(Math.random() * 50) + 10,\n            water: Math.floor(Math.random() * 30) + 5,\n            materials: Math.random() < 0.7 ? Math.floor(Math.random() * 60) + 10 : 0,\n            survivors: Math.random() < 0.3 ? 1 : 0\n          } : {},\n          owner: isBase ? \"player\" : null\n        });\n      }\n    }\n    return locations;\n  };\n  const [locations, setLocations] = useState(generateInitialGrid());\n  const resourcesRef = useRef(resources);\n  const upgradesRef = useRef(upgrades);\n  useEffect(() => {\n    resourcesRef.current = resources;\n  }, [resources]);\n  useEffect(() => {\n    upgradesRef.current = upgrades;\n  }, [upgrades]);\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n  useEffect(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    if (savedGame) {\n      try {\n        const gameState = JSON.parse(savedGame);\n        const timePassed = Date.now() - gameState.lastSave;\n        const minutesPassed = timePassed / 60000;\n        const offlineResources = {\n          ...gameState.resources\n        };\n        gameState.upgrades.forEach(upgrade => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            offlineResources.food += Math.floor(minutesPassed * 5 * upgrade.level * 0.5);\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            offlineResources.water += Math.floor(minutesPassed * 3 * upgrade.level * 0.5);\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            offlineResources.survivors += Math.floor(minutesPassed * (1 / 60) * upgrade.level * 0.5);\n          }\n        });\n        setResources(offlineResources);\n        setUpgrades(gameState.upgrades);\n        setLocations(gameState.locations);\n        setAutoScavengeEnabled(gameState.autoScavengeEnabled);\n      } catch (e) {\n        console.error(\"Failed to load save:\", e);\n      }\n    }\n  }, []);\n  const saveGame = useCallback(() => {\n    const gameState = {\n      resources,\n      upgrades,\n      locations,\n      lastSave: Date.now(),\n      autoScavengeEnabled\n    };\n    localStorage.setItem(SAVE_KEY, JSON.stringify(gameState));\n  }, [resources, upgrades, locations, autoScavengeEnabled]);\n  useEffect(() => {\n    autoSaveRef.current = setInterval(saveGame, AUTO_SAVE_INTERVAL);\n    return () => {\n      if (autoSaveRef.current) clearInterval(autoSaveRef.current);\n    };\n  }, [saveGame]);\n  function floorResources(res) {\n    return {\n      food: Math.floor(res.food),\n      water: Math.floor(res.water),\n      materials: Math.floor(res.materials),\n      survivors: Math.floor(res.survivors)\n    };\n  }\n  function isEqualResources(a, b) {\n    return a.food === b.food && a.water === b.water && a.materials === b.materials && a.survivors === b.survivors;\n  }\n  useEffect(() => {\n    gameLoopRef.current = setInterval(() => {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        upgrades.forEach(upgrade => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            newResources.food += 5 * upgrade.level / 60;\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            newResources.water += 3 * upgrade.level / 60;\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            newResources.survivors += 1 * upgrade.level / 3600;\n          }\n        });\n        const totalHousingCapacity = buildings.filter(b => b.type === \"house\").length * HOUSE_CAPACITY;\n        const unhousedSurvivors = newResources.survivors - totalHousingCapacity;\n        if (unhousedSurvivors > 0 && Math.random() < UNHOUSED_SURVIVOR_DEATH_RATE * unhousedSurvivors) {\n          const lostSurvivors = Math.min(Math.ceil(unhousedSurvivors / 5), newResources.survivors);\n          newResources.survivors = Math.max(0, newResources.survivors - lostSurvivors);\n          setShowDisaster({\n            id: \"exposure\",\n            name: \"Exposure!\",\n            description: `Some of your unhoused survivors froze to death! Lost ${lostSurvivors} survivor(s).`,\n            effect: {\n              survivors: -lostSurvivors\n            }\n          });\n        }\n        newResources.food = Math.max(0, newResources.food - prev.survivors * 0.01);\n        newResources.water = Math.max(0, newResources.water - prev.survivors * 0.02);\n        const floored = floorResources(newResources);\n        if (!isEqualResources(floored, floorResources(prev))) {\n          return floored;\n        }\n        return prev;\n      });\n      if (Math.random() < DISASTER_CHANCE) {\n        const disaster = disasters[Math.floor(Math.random() * disasters.length)];\n        setShowDisaster(disaster);\n        applyDisaster(disaster);\n      }\n      if (Math.random() < AI_ATTACK_CHANCE) {\n        triggerAIAttack();\n      }\n      if (autoScavengeEnabled) {\n        checkAutoScavenge();\n      }\n    }, 2000);\n    return () => {\n      if (gameLoopRef.current) clearInterval(gameLoopRef.current);\n    };\n  }, [upgrades, autoScavengeEnabled]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (waitingForScavengePopup || scavengeResult) return;\n      const finished = locations.find(loc => loc.lastScavenged && loc.scavengeTime > 0 && now - loc.lastScavenged >= loc.scavengeTime);\n      if (finished) finalizeScavenge(finished);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [locations, waitingForScavengePopup, scavengeResult]);\n  const applyDisaster = disaster => {\n    setResources(prev => ({\n      food: Math.max(0, prev.food + (disaster.effect.food || 0)),\n      water: Math.max(0, prev.water + (disaster.effect.water || 0)),\n      materials: Math.max(0, prev.materials + (disaster.effect.materials || 0)),\n      survivors: Math.max(1, prev.survivors + (disaster.effect.survivors || 0))\n    }));\n  };\n  const checkAutoScavenge = () => {\n    if (waitingForScavengePopup) return;\n    const now = Date.now();\n    setLocations(prev => {\n      let hasActiveScavenge = false;\n      let updated = false;\n      const newLocations = prev.map(loc => {\n        if (loc.lastScavenged && loc.scavengeTime > 0) {\n          if (now - loc.lastScavenged >= loc.scavengeTime && !updated) {\n            const loot = {\n              food: loc.resources.food || 0,\n              water: loc.resources.water || 0,\n              materials: loc.resources.materials || 0,\n              survivors: loc.resources.survivors || 0\n            };\n            finalizeScavenge(loc);\n            updated = true;\n            return loc;\n          }\n          hasActiveScavenge = true;\n          return loc;\n        }\n        return loc;\n      });\n      if (!hasActiveScavenge && !updated) {\n        const targetIndex = newLocations.findIndex(loc => loc.discovered && !loc.lastScavenged && loc.scavengeTime > 0 && Object.values(loc.resources).some(v => v && v > 0));\n        if (targetIndex !== -1) {\n          newLocations[targetIndex] = {\n            ...newLocations[targetIndex],\n            lastScavenged: now\n          };\n          updated = true;\n        }\n      }\n      return newLocations;\n    });\n  };\n  const addNotification = (message, type = 'info') => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, {\n      id,\n      message,\n      type,\n      timestamp: Date.now()\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, 5000);\n  };\n  const finalizeScavenge = location => {\n    const loot = {\n      food: location.resources.food || 0,\n      water: location.resources.water || 0,\n      materials: location.resources.materials || 0,\n      survivors: location.resources.survivors || 0\n    };\n    const resourceMessages = Object.entries(loot).filter(([_, value]) => value > 0).map(([resource, value]) => `${value} ${resource}`).join(', ');\n    if (resourceMessages) {\n      addNotification(`Found resources: ${resourceMessages}`, 'success');\n    }\n    setResources(prevResources => ({\n      food: prevResources.food + loot.food,\n      water: prevResources.water + loot.water,\n      materials: prevResources.materials + loot.materials,\n      survivors: prevResources.survivors + loot.survivors\n    }));\n    setLocations(prev => prev.map(loc => loc.id === location.id ? {\n      ...loc,\n      lastScavenged: null,\n      resources: {},\n      wasScavenged: true\n    } : loc));\n  };\n  const handleMapClick = (e, location) => {\n    e.stopPropagation();\n    if (!location.discovered && location.id !== \"base\") return;\n    setSelectedLocation(location);\n    setRadialMenuPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setShowRadialMenu(true);\n  };\n  const scavengeLocation = location => {\n    if (location.lastScavenged || location.scavengeTime === 0) return;\n    setLocations(prev => prev.map(loc => loc.id === location.id ? {\n      ...loc,\n      lastScavenged: Date.now()\n    } : loc));\n    setShowRadialMenu(false);\n  };\n  const exploreNearby = () => {\n    if (!selectedLocation) return;\n    const cost = EXPLORATION_COST;\n    const canAfford = Object.entries(cost).every(([resource, amount]) => resources[resource] >= (amount || 0));\n    if (!canAfford) {\n      setShowAttackResult({\n        success: false,\n        locationName: \"Exploration\",\n        survivorsLost: 0\n      });\n      setShowRadialMenu(false);\n      return;\n    }\n    setResources(prev => {\n      const newResources = {\n        ...prev\n      };\n      Object.entries(cost).forEach(([resource, amount]) => {\n        newResources[resource] -= amount || 0;\n      });\n      return newResources;\n    });\n    const getGridCoords = id => {\n      const match = id.match(/cell-(\\d+)-(\\d+)/);\n      if (!match) return null;\n      return {\n        x: parseInt(match[1]),\n        y: parseInt(match[2])\n      };\n    };\n    const selectedCoords = getGridCoords(selectedLocation.id);\n    if (!selectedCoords) return;\n    setLocations(prev => prev.map(loc => {\n      const coords = getGridCoords(loc.id);\n      if (!coords || loc.discovered) return loc;\n      const dx = Math.abs(coords.x - selectedCoords.x);\n      const dy = Math.abs(coords.y - selectedCoords.y);\n      if (dx <= 1 && dy <= 1) {\n        return {\n          ...loc,\n          discovered: true\n        };\n      }\n      return loc;\n    }));\n    setShowRadialMenu(false);\n  };\n  const purchaseUpgrade = upgrade => {\n    if (upgrade.level >= upgrade.maxLevel) return;\n    const canAfford = Object.entries(upgrade.cost).every(([resource, cost]) => resources[resource] >= (cost || 0));\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(upgrade.cost).forEach(([resource, cost]) => {\n          newResources[resource] -= cost || 0;\n        });\n        return newResources;\n      });\n      setUpgrades(prev => prev.map(u => u.id === upgrade.id ? {\n        ...u,\n        level: u.level + 1,\n        cost: Object.fromEntries(Object.entries(u.cost).map(([r, c]) => [r, Math.floor((c || 0) * 1.5)]))\n      } : u));\n    }\n  };\n  const getScavengeProgress = location => {\n    if (!location.lastScavenged || location.scavengeTime === 0) return 0;\n    const elapsed = Date.now() - location.lastScavenged;\n    return Math.min(100, elapsed / location.scavengeTime * 100);\n  };\n  const attackLocation = location => {\n    const success = Math.random() < 0.7;\n    if (success) {\n      const materialsGained = 20 + Math.floor(Math.random() * 30);\n      setResources(prev => ({\n        ...prev,\n        materials: prev.materials + materialsGained\n      }));\n      setLocations(prev => prev.map(loc => loc.id === location.id ? {\n        ...loc,\n        owner: \"player\"\n      } : loc));\n      setShowAttackResult({\n        success: true,\n        locationName: location.name,\n        resourcesGained: {\n          materials: materialsGained\n        }\n      });\n      setShowAttackedAnimation(location.id);\n    } else {\n      const survivorsLost = 1;\n      setResources(prev => ({\n        ...prev,\n        survivors: Math.max(0, prev.survivors - survivorsLost)\n      }));\n      setShowAttackResult({\n        success: false,\n        locationName: location.name,\n        survivorsLost: survivorsLost\n      });\n    }\n    setShowRadialMenu(false);\n  };\n  const buyBackLocation = location => {\n    const cost = {\n      materials: 50\n    };\n    const canAfford = Object.entries(cost).every(([resource, amount]) => resources[resource] >= (amount || 0));\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(cost).forEach(([resource, amount]) => {\n          newResources[resource] -= amount || 0;\n        });\n        return newResources;\n      });\n      setLocations(prev => prev.map(loc => loc.id === location.id ? {\n        ...loc,\n        owner: \"player\"\n      } : loc));\n      setShowAttackedAnimation(location.id);\n      setShowRadialMenu(false);\n    } else {\n      console.log(\"Cannot afford to buy back this location.\");\n    }\n  };\n  const startNewGame = () => {\n    setResources(initialResources);\n    setUpgrades(initialUpgrades);\n    setLocations(generateInitialGrid());\n    setBuildings([]);\n    setIsGameOver(false);\n    setIsFirstTimeUser(false);\n    setShowDisaster(null);\n    setShowAttackResult(null);\n    setShowAIAttack(null);\n    setScavengeResult(null);\n    setWaitingForScavengePopup(false);\n    setShowAttackedAnimation(null);\n    setSelectedLocation(null);\n    setShowRadialMenu(false);\n    localStorage.removeItem(SAVE_KEY);\n  };\n  useEffect(() => {\n    if (showAttackedAnimation) {\n      const timer = setTimeout(() => {\n        setShowAttackedAnimation(null);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [showAttackedAnimation]);\n  const GameOver = () => {\n    if (!isGameOver) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-red-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-red-500 mb-6 drop-shadow-md\",\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-lg mb-8\",\n          children: \"All your survivors have perished. The wasteland has claimed another settlement.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            className: \"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-green-600 to-green-800 hover:from-green-700 hover:to-green-900 text-white\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this);\n  };\n  const NewGame = () => {\n    if (!isFirstTimeUser) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md\",\n          children: \"Welcome to Wasteland Survivor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-lg mb-8\",\n          children: \"Lead your survivors through the post-apocalyptic wasteland. Gather resources, expand your territory, and survive against all odds.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            className: \"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this);\n  };\n  const Notifications = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50 space-y-2\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 ${notification.type === 'success' ? 'bg-green-600' : notification.type === 'error' ? 'bg-red-600' : 'bg-blue-600'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white font-medium\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 11\n      }, this)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 719,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (resources.survivors <= 0 && !isGameOver) {\n      setIsGameOver(true);\n    }\n  }, [resources.survivors, isGameOver]);\n  const triggerAIAttack = () => {\n    const playerOwnedLocations = locations.filter(loc => loc.owner === \"player\" && !loc.isBase);\n    if (playerOwnedLocations.length > 0) {\n      const targetLocation = playerOwnedLocations[Math.floor(Math.random() * playerOwnedLocations.length)];\n      const success = Math.random() < 0.75;\n      setShowAttackedAnimation(targetLocation.id);\n      if (success) {\n        setLocations(prev => prev.map(loc => loc.id === targetLocation.id ? {\n          ...loc,\n          owner: null\n        } : loc));\n        setResources(prev => ({\n          ...prev,\n          survivors: Math.max(0, prev.survivors - 1)\n        }));\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: true,\n          survivorsLost: 1\n        });\n      } else {\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: false\n        });\n      }\n    }\n  };\n  const HowToPlay = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-2xl shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md font-display\",\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200 text-lg space-y-4 text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome to Wasteland Survivor! Your goal is to lead your group of survivors through a post-apocalyptic world. Here's how to play:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Resources:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gather Food, Water, Materials, and manage your Survivors. These are essential for survival and progress.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Map & Exploration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on map locations to open a radial menu. You can Scavenge locations for resources, Attack rival locations to take them over, or Explore nearby to discover new areas. Exploring costs materials.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Buildings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"From the Resources panel, you can drag and drop buildings like Houses onto available map squares. Houses provide shelter for your survivors; without enough housing, survivors will freeze and die!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Upgrades:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Invest in base upgrades to increase your resource production and survivor attraction.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Threats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Beware of random Disasters and Rival Clan attacks. These events can deplete your resources and survivors, so be prepared!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Game Over:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The game ends if all your survivors are lost. You can always start a new game to try again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHowToPlay(false),\n          className: \"w-full mt-8 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\",\n          children: \"Got It!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 7\n    }, this);\n  };\n  const MapView = ({\n    buildings,\n    availableBuildings,\n    setBuildings,\n    setResources,\n    locations,\n    showAttackedAnimation\n  }) => {\n    const handleDragOver = e => {\n      e.preventDefault();\n    };\n    const handleDrop = (e, locationId) => {\n      e.preventDefault();\n      const buildingId = e.dataTransfer.getData(\"buildingId\");\n      const buildingBlueprint = availableBuildings.find(b => b.id === buildingId);\n      const targetLocation = locations.find(loc => loc.id === locationId);\n      if (!buildingBlueprint || !targetLocation) return;\n      const isLocationOccupied = buildings.some(b => b.locationId === locationId);\n      if (!targetLocation.discovered || targetLocation.owner !== \"player\" || targetLocation.isBase || isLocationOccupied) {\n        return;\n      }\n      const canAfford = Object.entries(buildingBlueprint.cost).every(([resource, cost]) => resources[resource] >= (cost || 0));\n      if (!canAfford) {\n        return;\n      }\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(buildingBlueprint.cost).forEach(([resource, cost]) => {\n          newResources[resource] -= cost || 0;\n        });\n        return newResources;\n      });\n      const newBuilding = {\n        ...buildingBlueprint,\n        id: `${buildingBlueprint.type}-${Date.now()}`,\n        locationId: locationId\n      };\n      setBuildings(prev => [...prev, newBuilding]);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-gray-900 border border-gray-700 rounded-xl p-4 sm:p-8 shadow-2xl h-full flex flex-col overflow-hidden before:absolute before:inset-0 before:bg-gradient-to-br before:from-gray-800 before:via-gray-900 before:to-black before:opacity-50 before:rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"relative z-10 text-2xl sm:text-4xl font-black text-white mb-4 sm:mb-8 text-center drop-shadow-md\",\n        children: \"Wasteland Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 grid bg-gray-950 border border-gray-700 rounded-lg aspect-square shadow-inner overflow-hidden\",\n        style: {\n          gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\n          gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`\n        },\n        onClick: () => setShowRadialMenu(false),\n        children: locations.map(location => {\n          const isAnimatingTakeover = showAttackedAnimation === location.id;\n          const placedBuilding = buildings.find(b => b.locationId === location.id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `relative flex items-center justify-center p-0.5 sm:p-1 transition-all duration-300 group ${location.discovered ? \"cursor-pointer\" : \"opacity-30\"} ${isAnimatingTakeover ? 'animate-pulse' : ''} ${location.id === showAttackedAnimation ? 'border-2 sm:border-4 border-red-500 animate-pulse-fast' : ''}`,\n            onClick: e => handleMapClick(e, location),\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, location.id),\n            children: location.discovered ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full h-full flex flex-col items-center justify-center text-center rounded-md overflow-hidden shadow-md group-hover:shadow-lg transition-shadow duration-300 border border-transparent group-hover:border-blue-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-full h-full flex items-center justify-center text-2xl sm:text-4xl transform transition-all duration-300 group-hover:scale-105 ${location.isBase || location.owner === \"player\" ? \"bg-green-700\" : \"bg-blue-700\"}`,\n                children: placedBuilding ? placedBuilding.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: placedBuilding.imageUrl,\n                  alt: placedBuilding.name,\n                  className: \"w-8 h-8 sm:w-10 sm:h-10 object-contain mx-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(BaseIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 27\n                }, this) : location.isBase ? /*#__PURE__*/_jsxDEV(BaseIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 27\n                }, this) : location.owner === \"player\" ? /*#__PURE__*/_jsxDEV(ResourcesIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 27\n                }, this) : location.resources && Object.values(location.resources).some(val => val && val > 0) ? /*#__PURE__*/_jsxDEV(ResourcesIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 27\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute bottom-0 left-0 right-0 bg-gray-800 bg-opacity-80 p-0.5 text-center backdrop-blur-sm group-hover:bg-opacity-90 transition-opacity\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-[8px] sm:text-xs font-medium text-gray-200 truncate\",\n                  children: location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 21\n              }, this), location.lastScavenged && location.scavengeTime > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-0 left-0 right-0 h-0.5 sm:h-1 bg-gray-700 rounded-t\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-full bg-yellow-500 rounded-t transition-all duration-1000\",\n                  style: {\n                    width: `${getScavengeProgress(location)}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-full rounded-md bg-gray-800 flex items-center justify-center text-2xl sm:text-4xl opacity-50 animate-pulse border border-gray-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 19\n            }, this)\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-950 text-white font-outfit antialiased relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-0 opacity-10 pointer-events-none\",\n      style: {\n        backgroundImage: `url('https://www.transparenttextures.com/patterns/dust-and-stones.png')`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 7\n    }, this), !isGameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 px-2 py-4 h-screen flex flex-col bg-gray-950 bg-opacity-95 pointer-events-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-black text-center mb-4 text-white drop-shadow-lg leading-tight tracking-tight\",\n          children: [\"Wasteland\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this), \"Survivor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-4 bg-gray-800 rounded-lg p-1 shadow-inner border border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"resources\"),\n            className: `flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${activeTab === \"resources\" ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"}`,\n            children: \"Resources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"map\"),\n            className: `flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${activeTab === \"map\" ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"}`,\n            children: \"Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 15\n        }, this), activeTab === \"resources\" ? /*#__PURE__*/_jsxDEV(ResourcePanel, {\n          resources: resources,\n          upgrades: upgrades,\n          autoScavengeEnabled: autoScavengeEnabled,\n          purchaseUpgrade: purchaseUpgrade,\n          setAutoScavengeEnabled: setAutoScavengeEnabled,\n          availableBuildings: availableBuildings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(MapView, {\n            buildings: buildings,\n            availableBuildings: availableBuildings,\n            setBuildings: setBuildings,\n            setResources: setResources,\n            locations: locations,\n            showAttackedAnimation: showAttackedAnimation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 flex h-screen p-8 gap-8 bg-gray-950 bg-opacity-95\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl font-black mb-8 text-white drop-shadow-lg leading-tight text-center tracking-tight\",\n            children: [\"Wasteland\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 19\n            }, this), \"Survivor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ResourcePanel, {\n            resources: resources,\n            upgrades: upgrades,\n            autoScavengeEnabled: autoScavengeEnabled,\n            purchaseUpgrade: purchaseUpgrade,\n            setAutoScavengeEnabled: setAutoScavengeEnabled,\n            availableBuildings: availableBuildings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col h-full\",\n          children: /*#__PURE__*/_jsxDEV(MapView, {\n            buildings: buildings,\n            availableBuildings: availableBuildings,\n            setBuildings: setBuildings,\n            setResources: setResources,\n            locations: locations,\n            showAttackedAnimation: showAttackedAnimation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), !isGameOver && !isFirstTimeUser && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHowToPlay(true),\n      className: \"fixed bottom-4 right-4 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white z-40\",\n      children: \"How to Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 9\n    }, this), (showRadialMenu || showDisaster || scavengeResult || showAttackResult || showAIAttack || isGameOver || isFirstTimeUser || showHowToPlay) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center pointer-events-auto\",\n      onClick: e => {\n        if (e.target === e.currentTarget) {\n          setShowRadialMenu(false);\n          setShowDisaster(null);\n          setScavengeResult(null);\n          setShowAttackResult(null);\n          setShowAIAttack(null);\n          setShowHowToPlay(false);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(RadialMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisasterPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScavengePopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AttackResultPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AIAttackPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NewGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 951,\n    columnNumber: 5\n  }, this);\n};\n_s(ApocalypticGame, \"AxGRrDJCaBA5H26Ie6D+E8oZsSk=\");\n_c = ApocalypticGame;\nexport default ApocalypticGame;\nvar _c;\n$RefreshReg$(_c, \"ApocalypticGame\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","ResourcePanel","jsxDEV","_jsxDEV","Fragment","_Fragment","SAVE_KEY","AUTO_SAVE_INTERVAL","DISASTER_CHANCE","AI_ATTACK_CHANCE","HOUSE_CAPACITY","UNHOUSED_SURVIVOR_DEATH_RATE","EXPLORATION_COST","materials","initialResources","food","water","survivors","initialUpgrades","id","name","description","level","maxLevel","cost","effect","disasters","availableBuildings","type","imageUrl","ApocalypticGame","_s","resources","setResources","upgrades","setUpgrades","activeTab","setActiveTab","isMobile","setIsMobile","showRadialMenu","setShowRadialMenu","radialMenuPosition","setRadialMenuPosition","x","y","selectedLocation","setSelectedLocation","showDisaster","setShowDisaster","autoScavengeEnabled","setAutoScavengeEnabled","buildings","setBuildings","scavengeResult","setScavengeResult","showAttackResult","setShowAttackResult","showAIAttack","setShowAIAttack","showAttackedAnimation","setShowAttackedAnimation","showHowToPlay","setShowHowToPlay","waitingForScavengePopup","setWaitingForScavengePopup","notifications","setNotifications","isFirstTimeUser","setIsFirstTimeUser","savedGame","localStorage","getItem","isGameOver","setIsGameOver","gameLoopRef","autoSaveRef","GRID_SIZE","locationNames","generateInitialGrid","locations","isBase","Math","floor","push","discovered","scavengeTime","random","lastScavenged","owner","setLocations","resourcesRef","upgradesRef","current","checkMobile","window","innerWidth","addEventListener","removeEventListener","gameState","JSON","parse","timePassed","Date","now","lastSave","minutesPassed","offlineResources","forEach","upgrade","e","console","error","saveGame","setItem","stringify","setInterval","clearInterval","floorResources","res","isEqualResources","a","b","prev","newResources","totalHousingCapacity","filter","length","unhousedSurvivors","lostSurvivors","min","ceil","max","floored","disaster","applyDisaster","triggerAIAttack","checkAutoScavenge","interval","finished","find","loc","finalizeScavenge","hasActiveScavenge","updated","newLocations","map","loot","targetIndex","findIndex","Object","values","some","v","addNotification","message","toString","timestamp","setTimeout","n","location","resourceMessages","entries","_","value","resource","join","prevResources","wasScavenged","handleMapClick","stopPropagation","clientX","clientY","scavengeLocation","exploreNearby","canAfford","every","amount","success","locationName","survivorsLost","getGridCoords","match","parseInt","selectedCoords","coords","dx","abs","dy","purchaseUpgrade","u","fromEntries","r","c","getScavengeProgress","elapsed","attackLocation","materialsGained","resourcesGained","buyBackLocation","log","startNewGame","removeItem","timer","clearTimeout","GameOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","NewGame","Notifications","notification","playerOwnedLocations","targetLocation","locationId","HowToPlay","MapView","handleDragOver","preventDefault","handleDrop","buildingId","dataTransfer","getData","buildingBlueprint","isLocationOccupied","newBuilding","style","gridTemplateColumns","gridTemplateRows","isAnimatingTakeover","placedBuilding","onDragOver","onDrop","src","alt","BaseIcon","ResourcesIcon","val","width","backgroundImage","backgroundSize","backgroundAttachment","target","currentTarget","RadialMenu","DisasterPopup","ScavengePopup","AttackResultPopup","AIAttackPopup","_c","$RefreshReg$"],"sources":["/Users/faybennett/outlierTasks/game-app/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ResourcePanel } from './components/ResourcePanel';\nimport { AIAttack, BaseUpgrade, Building, Disaster, MapLocation, Notification, Resources } from './types';\n\n// Constants\nconst SAVE_KEY = \"apocalypse-idle-save\";\nconst AUTO_SAVE_INTERVAL = 10000;\nconst DISASTER_CHANCE = 0.002;\nconst AI_ATTACK_CHANCE = 0.02;\nconst HOUSE_CAPACITY = 2;\nconst UNHOUSED_SURVIVOR_DEATH_RATE = 0.01;\nconst EXPLORATION_COST = { materials: 20 };\n\n// Initial state\nconst initialResources: Resources = {\n  food: 100,\n  water: 100,\n  materials: 50,\n  survivors: 5,\n};\n\nconst initialUpgrades: BaseUpgrade[] = [\n  {\n    id: 'farm',\n    name: 'Makeshift Farm',\n    description: 'Produces food over time',\n    level: 0,\n    maxLevel: 5,\n    cost: { materials: 50 },\n    effect: \"+5 food/minute\",\n  },\n  {\n    id: 'well',\n    name: 'Water Collector',\n    description: 'Collects water from the atmosphere',\n    level: 0,\n    maxLevel: 5,\n    cost: { materials: 40 },\n    effect: \"+3 water/minute\",\n  },\n  {\n    id: 'shelter',\n    name: 'Survivor Shelter',\n    description: 'Attracts new survivors',\n    level: 0,\n    maxLevel: 3,\n    cost: { materials: 100, food: 50 },\n    effect: \"+1 survivor chance/hour\",\n  },\n];\n\nconst disasters: Disaster[] = [\n  {\n    id: \"raiders\",\n    name: \"Raider Attack!\",\n    description: \"Raiders have attacked your base!\",\n    effect: { food: -20, water: -15, materials: -10 },\n  },\n  {\n    id: \"drought\",\n    name: \"Drought\",\n    description: \"Water supplies are running low!\",\n    effect: { water: -30 },\n  },\n  {\n    id: \"sickness\",\n    name: \"Disease Outbreak\",\n    description: \"A disease has spread through your camp!\",\n    effect: { survivors: -1, food: -10 },\n  },\n];\n\nconst availableBuildings: Building[] = [\n  { id: \"house-blueprint\", type: \"house\", name: \"House\", cost: { materials: 30, food: 10 }, level: 0, imageUrl: \"https://img.icons8.com/ios-filled/50/ffffff/home.png\" },\n];\n\nconst ApocalypticGame: React.FC = () => {\n  // State\n  const [resources, setResources] = useState<Resources>(initialResources);\n  const [upgrades, setUpgrades] = useState<BaseUpgrade[]>(initialUpgrades);\n  const [activeTab, setActiveTab] = useState<\"resources\" | \"map\">(\"resources\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [showRadialMenu, setShowRadialMenu] = useState(false);\n  const [radialMenuPosition, setRadialMenuPosition] = useState({ x: 0, y: 0 });\n  const [selectedLocation, setSelectedLocation] = useState<MapLocation | null>(null);\n  const [showDisaster, setShowDisaster] = useState<Disaster | null>(null);\n  const [autoScavengeEnabled, setAutoScavengeEnabled] = useState(true);\n  const [buildings, setBuildings] = useState<Building[]>([]);\n  const [scavengeResult, setScavengeResult] = useState<Partial<Resources> | null>(null);\n  const [showAttackResult, setShowAttackResult] = useState<{ success: boolean; locationName: string; resourcesGained?: Partial<Resources>; survivorsLost?: number } | null>(null);\n  const [showAIAttack, setShowAIAttack] = useState<AIAttack | null>(null);\n  const [showAttackedAnimation, setShowAttackedAnimation] = useState<string | null>(null);\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [waitingForScavengePopup, setWaitingForScavengePopup] = useState(false);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [isFirstTimeUser, setIsFirstTimeUser] = useState(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    return !savedGame;\n  });\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  const gameLoopRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  const autoSaveRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const GRID_SIZE = 5;\n\n  const locationNames = [\n    \"Dustfield\",\n    \"Ashrock\",\n    \"Ironpit\",\n    \"Deadwell\",\n    \"Cragpoint\",\n    \"Burnpass\",\n    \"Mudspire\",\n    \"Wretchend\",\n    \"Redhollow\",\n    \"Saltmoor\",\n    \"Scraptown\",\n    \"Charcliff\",\n    \"Dryreach\",\n    \"Ragbank\",\n    \"Blightden\",\n    \"Boneplain\",\n    \"Rustbarrow\",\n    \"Smokefall\",\n    \"Shivglen\",\n    \"Flintgorge\",\n    \"Gravefen\",\n    \"Scorchbay\",\n    \"Fogscar\",\n    \"Ruinstep\",\n    \"Crimsonlot\",\n  ];\n\n  const generateInitialGrid = (): MapLocation[] => {\n    const locations: MapLocation[] = [];\n\n    for (let y = 0; y < GRID_SIZE; y++) {\n      for (let x = 0; x < GRID_SIZE; x++) {\n        const isBase =\n          x === Math.floor(GRID_SIZE / 2) && y === Math.floor(GRID_SIZE / 2);\n\n        locations.push({\n          id: `cell-${x}-${y}`,\n          name: isBase\n            ? \"Your Base\"\n            : locationNames[y * GRID_SIZE + x] || `Sector-${x}-${y}`,\n          isBase: isBase,\n          x,\n          y,\n          discovered: isBase,\n          scavengeTime: isBase ? 0 : 5000 + Math.floor(Math.random() * 5000),\n          lastScavenged: null,\n          resources: isBase\n            ? {}\n            : Math.random() < 0.8\n            ? {\n                food: Math.floor(Math.random() * 50) + 10,\n                water: Math.floor(Math.random() * 30) + 5,\n                materials:\n                  Math.random() < 0.7 ? Math.floor(Math.random() * 60) + 10 : 0,\n                survivors: Math.random() < 0.3 ? 1 : 0,\n              }\n            : {},\n          owner: isBase ? \"player\" : null,\n        });\n      }\n    }\n\n    return locations;\n  };\n\n  const [locations, setLocations] = useState<MapLocation[]>(\n    generateInitialGrid(),\n  );\n\n  const resourcesRef = useRef(resources);\n  const upgradesRef = useRef(upgrades);\n\n  useEffect(() => {\n    resourcesRef.current = resources;\n  }, [resources]);\n  useEffect(() => {\n    upgradesRef.current = upgrades;\n  }, [upgrades]);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n\n  useEffect(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    if (savedGame) {\n      try {\n        const gameState: GameState = JSON.parse(savedGame);\n        const timePassed = Date.now() - gameState.lastSave;\n\n        const minutesPassed = timePassed / 60000;\n        const offlineResources = { ...gameState.resources };\n\n        gameState.upgrades.forEach((upgrade) => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            offlineResources.food += Math.floor(\n              minutesPassed * 5 * upgrade.level * 0.5,\n            );\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            offlineResources.water += Math.floor(\n              minutesPassed * 3 * upgrade.level * 0.5,\n            );\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            offlineResources.survivors += Math.floor(\n              minutesPassed * (1 / 60) * upgrade.level * 0.5,\n            );\n          }\n        });\n\n        setResources(offlineResources);\n        setUpgrades(gameState.upgrades);\n        setLocations(gameState.locations);\n        setAutoScavengeEnabled(gameState.autoScavengeEnabled);\n      } catch (e) {\n        console.error(\"Failed to load save:\", e);\n      }\n    }\n  }, []);\n\n  const saveGame = useCallback(() => {\n    const gameState: GameState = {\n      resources,\n      upgrades,\n      locations,\n      lastSave: Date.now(),\n      autoScavengeEnabled,\n    };\n    localStorage.setItem(SAVE_KEY, JSON.stringify(gameState));\n  }, [resources, upgrades, locations, autoScavengeEnabled]);\n\n  useEffect(() => {\n    autoSaveRef.current = setInterval(saveGame, AUTO_SAVE_INTERVAL);\n    return () => {\n      if (autoSaveRef.current) clearInterval(autoSaveRef.current);\n    };\n  }, [saveGame]);\n\n  function floorResources(res: Resources): Resources {\n    return {\n      food: Math.floor(res.food),\n      water: Math.floor(res.water),\n      materials: Math.floor(res.materials),\n      survivors: Math.floor(res.survivors),\n    };\n  }\n\n  function isEqualResources(a: Resources, b: Resources): boolean {\n    return (\n      a.food === b.food &&\n      a.water === b.water &&\n      a.materials === b.materials &&\n      a.survivors === b.survivors\n    );\n  }\n\n  useEffect(() => {\n    gameLoopRef.current = setInterval(() => {\n      setResources((prev) => {\n        const newResources = { ...prev };\n\n        upgrades.forEach((upgrade) => {\n          if (upgrade.id === \"farm\" && upgrade.level > 0) {\n            newResources.food += (5 * upgrade.level) / 60;\n          }\n          if (upgrade.id === \"well\" && upgrade.level > 0) {\n            newResources.water += (3 * upgrade.level) / 60;\n          }\n          if (upgrade.id === \"shelter\" && upgrade.level > 0) {\n            newResources.survivors += (1 * upgrade.level) / 3600;\n          }\n        });\n\n        const totalHousingCapacity = buildings.filter(b => b.type === \"house\").length * HOUSE_CAPACITY;\n        const unhousedSurvivors = newResources.survivors - totalHousingCapacity;\n        \n        if (unhousedSurvivors > 0 && Math.random() < UNHOUSED_SURVIVOR_DEATH_RATE * unhousedSurvivors) {\n          const lostSurvivors = Math.min(Math.ceil(unhousedSurvivors / 5), newResources.survivors);\n          newResources.survivors = Math.max(0, newResources.survivors - lostSurvivors);\n          setShowDisaster({\n            id: \"exposure\",\n            name: \"Exposure!\",\n            description: `Some of your unhoused survivors froze to death! Lost ${lostSurvivors} survivor(s).`,\n            effect: { survivors: -lostSurvivors },\n          });\n        }\n\n        newResources.food = Math.max(\n          0,\n          newResources.food - prev.survivors * 0.01,\n        );\n        newResources.water = Math.max(\n          0,\n          newResources.water - prev.survivors * 0.02,\n        );\n\n        const floored = floorResources(newResources);\n        if (!isEqualResources(floored, floorResources(prev))) {\n          return floored;\n        }\n        return prev;\n      });\n\n      if (Math.random() < DISASTER_CHANCE) {\n        const disaster =\n          disasters[Math.floor(Math.random() * disasters.length)];\n        setShowDisaster(disaster);\n        applyDisaster(disaster);\n      }\n\n      if (Math.random() < AI_ATTACK_CHANCE) {\n        triggerAIAttack();\n      }\n\n      if (autoScavengeEnabled) {\n        checkAutoScavenge();\n      }\n    }, 2000);\n\n    return () => {\n      if (gameLoopRef.current) clearInterval(gameLoopRef.current);\n    };\n  }, [upgrades, autoScavengeEnabled]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (waitingForScavengePopup || scavengeResult) return;\n\n      const finished = locations.find(\n        (loc) =>\n          loc.lastScavenged &&\n          loc.scavengeTime > 0 &&\n          now - loc.lastScavenged >= loc.scavengeTime,\n      );\n\n      if (finished) finalizeScavenge(finished);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [locations, waitingForScavengePopup, scavengeResult]);\n\n  const applyDisaster = (disaster: Disaster) => {\n    setResources((prev) => ({\n      food: Math.max(0, prev.food + (disaster.effect.food || 0)),\n      water: Math.max(0, prev.water + (disaster.effect.water || 0)),\n      materials: Math.max(0, prev.materials + (disaster.effect.materials || 0)),\n      survivors: Math.max(1, prev.survivors + (disaster.effect.survivors || 0)),\n    }));\n  };\n\n  const checkAutoScavenge = () => {\n    if (waitingForScavengePopup) return;\n\n    const now = Date.now();\n\n    setLocations((prev) => {\n      let hasActiveScavenge = false;\n      let updated = false;\n\n      const newLocations = prev.map((loc) => {\n        if (loc.lastScavenged && loc.scavengeTime > 0) {\n          if (now - loc.lastScavenged >= loc.scavengeTime && !updated) {\n            const loot = {\n              food: loc.resources.food || 0,\n              water: loc.resources.water || 0,\n              materials: loc.resources.materials || 0,\n              survivors: loc.resources.survivors || 0,\n            };\n\n            finalizeScavenge(loc);\n            updated = true;\n            return loc;\n          }\n\n          hasActiveScavenge = true;\n          return loc;\n        }\n\n        return loc;\n      });\n\n      if (!hasActiveScavenge && !updated) {\n        const targetIndex = newLocations.findIndex(\n          (loc) =>\n            loc.discovered &&\n            !loc.lastScavenged &&\n            loc.scavengeTime > 0 &&\n            Object.values(loc.resources).some((v) => v && v > 0),\n        );\n\n        if (targetIndex !== -1) {\n          newLocations[targetIndex] = {\n            ...newLocations[targetIndex],\n            lastScavenged: now,\n          };\n          updated = true;\n        }\n      }\n\n      return newLocations;\n    });\n  };\n\n  const addNotification = (message: string, type: 'success' | 'error' | 'info' = 'info') => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, { id, message, type, timestamp: Date.now() }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, 5000);\n  };\n\n  const finalizeScavenge = (location: MapLocation) => {\n    const loot = {\n      food: location.resources.food || 0,\n      water: location.resources.water || 0,\n      materials: location.resources.materials || 0,\n      survivors: location.resources.survivors || 0,\n    };\n\n    const resourceMessages = Object.entries(loot)\n      .filter(([_, value]) => value > 0)\n      .map(([resource, value]) => `${value} ${resource}`)\n      .join(', ');\n    \n    if (resourceMessages) {\n      addNotification(`Found resources: ${resourceMessages}`, 'success');\n    }\n\n    setResources((prevResources) => ({\n      food: prevResources.food + loot.food,\n      water: prevResources.water + loot.water,\n      materials: prevResources.materials + loot.materials,\n      survivors: prevResources.survivors + loot.survivors,\n    }));\n\n    setLocations((prev) =>\n      prev.map((loc) =>\n        loc.id === location.id\n          ? { ...loc, lastScavenged: null, resources: {}, wasScavenged: true }\n          : loc,\n      ),\n    );\n  };\n\n  const handleMapClick = (\n    e: React.MouseEvent<HTMLDivElement>,\n    location: MapLocation,\n  ) => {\n    e.stopPropagation();\n    if (!location.discovered && location.id !== \"base\") return;\n\n    setSelectedLocation(location);\n    setRadialMenuPosition({ x: e.clientX, y: e.clientY });\n    setShowRadialMenu(true);\n  };\n\n  const scavengeLocation = (location: MapLocation) => {\n    if (location.lastScavenged || location.scavengeTime === 0) return;\n\n    setLocations((prev) =>\n      prev.map((loc) =>\n        loc.id === location.id ? { ...loc, lastScavenged: Date.now() } : loc,\n      ),\n    );\n    setShowRadialMenu(false);\n  };\n\n  const exploreNearby = () => {\n    if (!selectedLocation) return;\n\n    const cost = EXPLORATION_COST;\n    const canAfford = Object.entries(cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= (amount || 0)\n    );\n\n    if (!canAfford) {\n      setShowAttackResult({\n        success: false,\n        locationName: \"Exploration\",\n        survivorsLost: 0,\n      });\n      setShowRadialMenu(false);\n      return;\n    }\n\n    setResources(prev => {\n      const newResources = { ...prev };\n      Object.entries(cost).forEach(([resource, amount]) => {\n        newResources[resource as keyof Resources] -= amount || 0;\n      });\n      return newResources;\n    });\n\n    const getGridCoords = (id: string) => {\n      const match = id.match(/cell-(\\d+)-(\\d+)/);\n      if (!match) return null;\n      return { x: parseInt(match[1]), y: parseInt(match[2]) };\n    };\n\n    const selectedCoords = getGridCoords(selectedLocation.id);\n    if (!selectedCoords) return;\n\n    setLocations((prev) =>\n      prev.map((loc) => {\n        const coords = getGridCoords(loc.id);\n        if (!coords || loc.discovered) return loc;\n\n        const dx = Math.abs(coords.x - selectedCoords.x);\n        const dy = Math.abs(coords.y - selectedCoords.y);\n\n        if (dx <= 1 && dy <= 1) {\n          return { ...loc, discovered: true };\n        }\n\n        return loc;\n      }),\n    );\n\n    setShowRadialMenu(false);\n  };\n\n  const purchaseUpgrade = (upgrade: BaseUpgrade) => {\n    if (upgrade.level >= upgrade.maxLevel) return;\n\n    const canAfford = Object.entries(upgrade.cost).every(\n      ([resource, cost]) =>\n        resources[resource as keyof Resources] >= (cost || 0),\n    );\n\n    if (canAfford) {\n      setResources((prev) => {\n        const newResources = { ...prev };\n        Object.entries(upgrade.cost).forEach(([resource, cost]) => {\n          newResources[resource as keyof Resources] -= cost || 0;\n        });\n        return newResources;\n      });\n\n      setUpgrades((prev) =>\n        prev.map((u) =>\n          u.id === upgrade.id\n            ? {\n                ...u,\n                level: u.level + 1,\n                cost: Object.fromEntries(\n                  Object.entries(u.cost).map(([r, c]) => [\n                    r,\n                    Math.floor((c || 0) * 1.5),\n                  ]),\n                ),\n              }\n            : u,\n        ),\n      );\n    }\n  };\n\n  const getScavengeProgress = (location: MapLocation) => {\n    if (!location.lastScavenged || location.scavengeTime === 0) return 0;\n    const elapsed = Date.now() - location.lastScavenged;\n    return Math.min(100, (elapsed / location.scavengeTime) * 100);\n  };\n\n  const attackLocation = (location: MapLocation) => {\n    const success = Math.random() < 0.7;\n\n    if (success) {\n      const materialsGained = 20 + Math.floor(Math.random() * 30);\n      setResources((prev) => ({\n        ...prev,\n        materials: prev.materials + materialsGained,\n      }));\n      setLocations((prev) =>\n        prev.map((loc) =>\n          loc.id === location.id ? { ...loc, owner: \"player\" } : loc,\n        ),\n      );\n      setShowAttackResult({\n        success: true,\n        locationName: location.name,\n        resourcesGained: { materials: materialsGained },\n      });\n      setShowAttackedAnimation(location.id);\n    } else {\n      const survivorsLost = 1;\n      setResources((prev) => ({\n        ...prev,\n        survivors: Math.max(0, prev.survivors - survivorsLost),\n      }));\n      setShowAttackResult({\n        success: false,\n        locationName: location.name,\n        survivorsLost: survivorsLost,\n      });\n    }\n    setShowRadialMenu(false);\n  };\n\n  const buyBackLocation = (location: MapLocation) => {\n    const cost = { materials: 50 };\n\n    const canAfford = Object.entries(cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= (amount || 0)\n    );\n\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = { ...prev };\n        Object.entries(cost).forEach(([resource, amount]) => {\n          newResources[resource as keyof Resources] -= amount || 0;\n        });\n        return newResources;\n      });\n\n      setLocations(prev =>\n        prev.map(loc =>\n          loc.id === location.id ? { ...loc, owner: \"player\" } : loc\n        )\n      );\n      setShowAttackedAnimation(location.id);\n      setShowRadialMenu(false);\n    } else {\n      console.log(\"Cannot afford to buy back this location.\");\n    }\n  };\n\n  const startNewGame = () => {\n    setResources(initialResources);\n    setUpgrades(initialUpgrades);\n    setLocations(generateInitialGrid());\n    setBuildings([]);\n    setIsGameOver(false);\n    setIsFirstTimeUser(false);\n    setShowDisaster(null);\n    setShowAttackResult(null);\n    setShowAIAttack(null);\n    setScavengeResult(null);\n    setWaitingForScavengePopup(false);\n    setShowAttackedAnimation(null);\n    setSelectedLocation(null);\n    setShowRadialMenu(false);\n    localStorage.removeItem(SAVE_KEY);\n  };\n\n  useEffect(() => {\n    if (showAttackedAnimation) {\n      const timer = setTimeout(() => {\n        setShowAttackedAnimation(null);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [showAttackedAnimation]);\n\n  const GameOver = () => {\n    if (!isGameOver) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-red-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-red-500 mb-6 drop-shadow-md\">\n            Game Over\n          </h3>\n          <p className=\"text-gray-200 text-lg mb-8\">\n            All your survivors have perished. The wasteland has claimed another settlement.\n          </p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={startNewGame}\n              className=\"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-green-600 to-green-800 hover:from-green-700 hover:to-green-900 text-white\"\n            >\n              Start New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const NewGame = () => {\n    if (!isFirstTimeUser) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md\">\n            Welcome to Wasteland Survivor\n          </h3>\n          <p className=\"text-gray-200 text-lg mb-8\">\n            Lead your survivors through the post-apocalyptic wasteland. Gather resources, expand your territory, and survive against all odds.\n          </p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={startNewGame}\n              className=\"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\"\n            >\n              Start New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const Notifications = () => (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 ${\n            notification.type === 'success'\n              ? 'bg-green-600'\n              : notification.type === 'error'\n              ? 'bg-red-600'\n              : 'bg-blue-600'\n          }`}\n        >\n          <p className=\"text-white font-medium\">{notification.message}</p>\n        </div>\n      ))}\n    </div>\n  );\n\n  useEffect(() => {\n    if (resources.survivors <= 0 && !isGameOver) {\n      setIsGameOver(true);\n    }\n  }, [resources.survivors, isGameOver]);\n\n  const triggerAIAttack = () => {\n    const playerOwnedLocations = locations.filter(\n      (loc) => loc.owner === \"player\" && !loc.isBase\n    );\n\n    if (playerOwnedLocations.length > 0) {\n      const targetLocation =\n        playerOwnedLocations[Math.floor(Math.random() * playerOwnedLocations.length)];\n      const success = Math.random() < 0.75;\n\n      setShowAttackedAnimation(targetLocation.id);\n\n      if (success) {\n        setLocations((prev) =>\n          prev.map((loc) =>\n            loc.id === targetLocation.id ? { ...loc, owner: null } : loc\n          )\n        );\n        setResources((prev) => ({\n          ...prev,\n          survivors: Math.max(0, prev.survivors - 1),\n        }));\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: true,\n          survivorsLost: 1,\n        });\n      } else {\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: false,\n        });\n      }\n    }\n  };\n\n  const HowToPlay = () => {\n    if (!showHowToPlay) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-2xl shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md font-display\">\n            How to Play\n          </h3>\n          <div className=\"text-gray-200 text-lg space-y-4 text-left\">\n            <p>\n              Welcome to Wasteland Survivor! Your goal is to lead your group of survivors through a post-apocalyptic world. Here's how to play:\n            </p>\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Resources:</h4>\n            <p>Gather Food, Water, Materials, and manage your Survivors. These are essential for survival and progress.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Map & Exploration:</h4>\n            <p>Click on map locations to open a radial menu. You can Scavenge locations for resources, Attack rival locations to take them over, or Explore nearby to discover new areas. Exploring costs materials.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Buildings:</h4>\n            <p>From the Resources panel, you can drag and drop buildings like Houses onto available map squares. Houses provide shelter for your survivors; without enough housing, survivors will freeze and die!</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Upgrades:</h4>\n            <p>Invest in base upgrades to increase your resource production and survivor attraction.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Threats:</h4>\n            <p>Beware of random Disasters and Rival Clan attacks. These events can deplete your resources and survivors, so be prepared!</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Game Over:</h4>\n            <p>The game ends if all your survivors are lost. You can always start a new game to try again!</p>\n          </div>\n          <button\n            onClick={() => setShowHowToPlay(false)}\n            className=\"w-full mt-8 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\"\n          >\n            Got It!\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const MapView = ({\n    buildings,\n    availableBuildings,\n    setBuildings,\n    setResources,\n    locations,\n    showAttackedAnimation,\n  }: {\n    buildings: Building[];\n    availableBuildings: Building[];\n    setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n    setResources: React.Dispatch<React.SetStateAction<Resources>>;\n    locations: MapLocation[];\n    showAttackedAnimation: string | null;\n  }) => {\n    const handleDragOver = (e: React.DragEvent) => {\n      e.preventDefault();\n    };\n\n    const handleDrop = (e: React.DragEvent, locationId: string) => {\n      e.preventDefault();\n      const buildingId = e.dataTransfer.getData(\"buildingId\");\n      const buildingBlueprint = availableBuildings.find((b) => b.id === buildingId);\n      const targetLocation = locations.find((loc) => loc.id === locationId);\n\n      if (!buildingBlueprint || !targetLocation) return;\n\n      const isLocationOccupied = buildings.some(b => b.locationId === locationId);\n      if (!targetLocation.discovered || targetLocation.owner !== \"player\" || targetLocation.isBase || isLocationOccupied) {\n        return;\n      }\n\n      const canAfford = Object.entries(buildingBlueprint.cost).every(\n        ([resource, cost]) => resources[resource as keyof Resources] >= (cost || 0)\n      );\n\n      if (!canAfford) {\n        return;\n      }\n\n      setResources(prev => {\n        const newResources = { ...prev };\n        Object.entries(buildingBlueprint.cost).forEach(([resource, cost]) => {\n          newResources[resource as keyof Resources] -= cost || 0;\n        });\n        return newResources;\n      });\n\n      const newBuilding: Building = {\n        ...buildingBlueprint,\n        id: `${buildingBlueprint.type}-${Date.now()}`,\n        locationId: locationId,\n      };\n      setBuildings(prev => [...prev, newBuilding]);\n    };\n\n    return (\n      <div className=\"relative bg-gray-900 border border-gray-700 rounded-xl p-4 sm:p-8 shadow-2xl h-full flex flex-col overflow-hidden before:absolute before:inset-0 before:bg-gradient-to-br before:from-gray-800 before:via-gray-900 before:to-black before:opacity-50 before:rounded-xl\">\n        <h2 className=\"relative z-10 text-2xl sm:text-4xl font-black text-white mb-4 sm:mb-8 text-center drop-shadow-md\">\n          Wasteland Map\n        </h2>\n        <div\n          className=\"relative z-10 grid bg-gray-950 border border-gray-700 rounded-lg aspect-square shadow-inner overflow-hidden\"\n          style={{\n            gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\n            gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`,\n          }}\n          onClick={() => setShowRadialMenu(false)}\n        >\n          {locations.map((location) => {\n            const isAnimatingTakeover = showAttackedAnimation === location.id;\n            const placedBuilding = buildings.find(b => b.locationId === location.id);\n\n            return (\n              <div\n                key={location.id}\n                className={`relative flex items-center justify-center p-0.5 sm:p-1 transition-all duration-300 group ${location.discovered ? \"cursor-pointer\" : \"opacity-30\"} ${isAnimatingTakeover ? 'animate-pulse' : ''} ${location.id === showAttackedAnimation ? 'border-2 sm:border-4 border-red-500 animate-pulse-fast' : ''}`}\n                onClick={(e) => handleMapClick(e, location)}\n                onDragOver={handleDragOver}\n                onDrop={(e) => handleDrop(e, location.id)}\n              >\n                {location.discovered ? (\n                  <div className=\"relative w-full h-full flex flex-col items-center justify-center text-center rounded-md overflow-hidden shadow-md group-hover:shadow-lg transition-shadow duration-300 border border-transparent group-hover:border-blue-500\">\n                    <div\n                      className={`w-full h-full flex items-center justify-center text-2xl sm:text-4xl transform transition-all duration-300 group-hover:scale-105 ${location.isBase || location.owner === \"player\" ? \"bg-green-700\" : \"bg-blue-700\"}`}\n                    >\n                      {placedBuilding ? (\n                        placedBuilding.imageUrl ? (\n                          <img src={placedBuilding.imageUrl} alt={placedBuilding.name} className=\"w-8 h-8 sm:w-10 sm:h-10 object-contain mx-auto\" />\n                        ) : (\n                          <BaseIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        )\n                      ) : (\n                        location.isBase ? (\n                          <BaseIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        ) : location.owner === \"player\" ? (\n                          <ResourcesIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        ) : location.resources && Object.values(location.resources).some(val => val && val > 0) ? (\n                          <ResourcesIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        ) : null\n                      )}\n                    </div>\n                    <div className=\"absolute bottom-0 left-0 right-0 bg-gray-800 bg-opacity-80 p-0.5 text-center backdrop-blur-sm group-hover:bg-opacity-90 transition-opacity\">\n                      <p className=\"text-[8px] sm:text-xs font-medium text-gray-200 truncate\">\n                        {location.name}\n                      </p>\n                    </div>\n                    {location.lastScavenged && location.scavengeTime > 0 && (\n                      <div className=\"absolute top-0 left-0 right-0 h-0.5 sm:h-1 bg-gray-700 rounded-t\">\n                        <div\n                          className=\"h-full bg-yellow-500 rounded-t transition-all duration-1000\"\n                          style={{ width: `${getScavengeProgress(location)}%` }}\n                        />\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"w-full h-full rounded-md bg-gray-800 flex items-center justify-center text-2xl sm:text-4xl opacity-50 animate-pulse border border-gray-700\"></div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-950 text-white font-outfit antialiased relative overflow-hidden\">\n      <Notifications />\n      \n      <div \n        className=\"fixed inset-0 z-0 opacity-10 pointer-events-none\" \n        style={{ \n          backgroundImage: `url('https://www.transparenttextures.com/patterns/dust-and-stones.png')`, \n          backgroundSize: 'cover',\n          backgroundAttachment: 'fixed'\n        }}\n      ></div>\n      \n      {!isGameOver && (\n        <>\n          {isMobile ? (\n            <div className=\"relative z-10 px-2 py-4 h-screen flex flex-col bg-gray-950 bg-opacity-95 pointer-events-auto\">\n              <h1 className=\"text-3xl font-black text-center mb-4 text-white drop-shadow-lg leading-tight tracking-tight\">\n                Wasteland\n                <br />\n                Survivor\n              </h1>\n              <div className=\"flex mb-4 bg-gray-800 rounded-lg p-1 shadow-inner border border-gray-700\">\n                <button\n                  onClick={() => setActiveTab(\"resources\")}\n                  className={`flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${\n                    activeTab === \"resources\"\n                      ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"\n                  }`}\n                >\n                  Resources\n                </button>\n                <button\n                  onClick={() => setActiveTab(\"map\")}\n                  className={`flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${\n                    activeTab === \"map\"\n                      ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"\n                  }`}\n                >\n                  Map\n                </button>\n              </div>\n              {activeTab === \"resources\" ? (\n                <ResourcePanel\n                  resources={resources}\n                  upgrades={upgrades}\n                  autoScavengeEnabled={autoScavengeEnabled}\n                  purchaseUpgrade={purchaseUpgrade}\n                  setAutoScavengeEnabled={setAutoScavengeEnabled}\n                  availableBuildings={availableBuildings}\n                />\n              ) : (\n                <div className=\"flex-1 overflow-hidden\">\n                  <MapView\n                    buildings={buildings}\n                    availableBuildings={availableBuildings}\n                    setBuildings={setBuildings}\n                    setResources={setResources}\n                    locations={locations}\n                    showAttackedAnimation={showAttackedAnimation}\n                  />\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"relative z-10 flex h-screen p-8 gap-8 bg-gray-950 bg-opacity-95\">\n              <div className=\"w-1/2 flex flex-col\">\n                <h1 className=\"text-5xl font-black mb-8 text-white drop-shadow-lg leading-tight text-center tracking-tight\">\n                  Wasteland\n                  <br />\n                  Survivor\n                </h1>\n                <ResourcePanel\n                  resources={resources}\n                  upgrades={upgrades}\n                  autoScavengeEnabled={autoScavengeEnabled}\n                  purchaseUpgrade={purchaseUpgrade}\n                  setAutoScavengeEnabled={setAutoScavengeEnabled}\n                  availableBuildings={availableBuildings}\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col h-full\">\n                <MapView\n                  buildings={buildings}\n                  availableBuildings={availableBuildings}\n                  setBuildings={setBuildings}\n                  setResources={setResources}\n                  locations={locations}\n                  showAttackedAnimation={showAttackedAnimation}\n                />\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n      {!isGameOver && !isFirstTimeUser && (\n        <button\n          onClick={() => setShowHowToPlay(true)}\n          className=\"fixed bottom-4 right-4 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white z-40\"\n        >\n          How to Play\n        </button>\n      )}\n\n      {(showRadialMenu || showDisaster || scavengeResult || showAttackResult || showAIAttack || isGameOver || isFirstTimeUser || showHowToPlay) && (\n        <div \n          className=\"fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center pointer-events-auto\" \n          onClick={(e) => { \n            if (e.target === e.currentTarget) {\n              setShowRadialMenu(false);\n              setShowDisaster(null);\n              setScavengeResult(null);\n              setShowAttackResult(null);\n              setShowAIAttack(null);\n              setShowHowToPlay(false);\n            }\n          }}\n        >\n          <RadialMenu />\n          <DisasterPopup />\n          <ScavengePopup />\n          <AttackResultPopup />\n          <AIAttackPopup />\n          <GameOver />\n          <NewGame />\n          <HowToPlay />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ApocalypticGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}