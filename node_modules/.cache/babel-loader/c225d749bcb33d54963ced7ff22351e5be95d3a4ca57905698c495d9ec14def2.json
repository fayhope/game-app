{"ast":null,"code":"var _jsxFileName = \"/Users/faybennett/outlierTasks/game-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { ResourcePanel } from './components/ResourcePanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Constants\nconst SAVE_KEY = \"apocalypse-idle-save\";\nconst AUTO_SAVE_INTERVAL = 10000;\nconst DISASTER_CHANCE = 0.002;\nconst AI_ATTACK_CHANCE = 0.02;\nconst HOUSE_CAPACITY = 2;\nconst UNHOUSED_SURVIVOR_DEATH_RATE = 0.01;\nconst EXPLORATION_COST = {\n  materials: 20\n};\n\n// Initial state\nconst initialResources = {\n  food: 100,\n  water: 100,\n  materials: 50,\n  survivors: 5\n};\nconst initialUpgrades = [{\n  id: 'food_production',\n  name: 'Food Production',\n  description: 'Increases food production rate',\n  level: 1,\n  maxLevel: 5,\n  cost: {\n    materials: 50\n  },\n  effect: level => ({\n    food: level * 0.2\n  })\n}, {\n  id: 'water_production',\n  name: 'Water Production',\n  description: 'Increases water production rate',\n  level: 1,\n  maxLevel: 5,\n  cost: {\n    materials: 50\n  },\n  effect: level => ({\n    water: level * 0.2\n  })\n}, {\n  id: 'material_production',\n  name: 'Material Production',\n  description: 'Increases material production rate',\n  level: 1,\n  maxLevel: 5,\n  cost: {\n    materials: 50\n  },\n  effect: level => ({\n    materials: level * 0.2\n  })\n}];\nconst disasters = [{\n  id: 'food_shortage',\n  name: 'Food Shortage',\n  description: 'A severe food shortage has occurred!',\n  effect: resources => ({\n    food: -resources.food * 0.2\n  }),\n  probability: 0.1\n}, {\n  id: 'water_contamination',\n  name: 'Water Contamination',\n  description: 'The water supply has been contaminated!',\n  effect: resources => ({\n    water: -resources.water * 0.2\n  }),\n  probability: 0.1\n}, {\n  id: 'survivor_loss',\n  name: 'Survivor Loss',\n  description: 'Some survivors have perished!',\n  effect: resources => ({\n    survivors: -Math.floor(resources.survivors * 0.1)\n  }),\n  probability: 0.05\n}];\nconst availableBuildings = [{\n  id: 'house',\n  name: 'House',\n  description: 'Provides shelter for survivors',\n  cost: {\n    materials: 30,\n    food: 10\n  },\n  production: {\n    survivors: 0.1\n  },\n  type: 'house',\n  level: 0,\n  imageUrl: 'https://img.icons8.com/ios-filled/50/ffffff/home.png'\n}, {\n  id: 'water_collector',\n  name: 'Water Collector',\n  description: 'Collects water from the atmosphere',\n  cost: {\n    materials: 40\n  },\n  production: {\n    water: 0.3\n  },\n  type: 'water_collector',\n  level: 0\n}];\nconst ApocalypticGame = () => {\n  _s();\n  // State\n  const [resources, setResources] = useState(initialResources);\n  const [upgrades, setUpgrades] = useState(initialUpgrades);\n  const [activeTab, setActiveTab] = useState(\"resources\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [showRadialMenu, setShowRadialMenu] = useState(false);\n  const [radialMenuPosition, setRadialMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showDisaster, setShowDisaster] = useState(null);\n  const [autoScavengeEnabled, setAutoScavengeEnabled] = useState(true);\n  const [buildings, setBuildings] = useState([]);\n  const [scavengeResult, setScavengeResult] = useState(null);\n  const [showAttackResult, setShowAttackResult] = useState(null);\n  const [showAIAttack, setShowAIAttack] = useState(null);\n  const [showAttackedAnimation, setShowAttackedAnimation] = useState(null);\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [waitingForScavengePopup, setWaitingForScavengePopup] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [isFirstTimeUser, setIsFirstTimeUser] = useState(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    return !savedGame;\n  });\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [locations, setLocations] = useState(generateInitialGrid());\n  const gameLoopRef = useRef(null);\n  const autoSaveRef = useRef(null);\n  const GRID_SIZE = 5;\n  const locationNames = [\"Dustfield\", \"Ashrock\", \"Ironpit\", \"Deadwell\", \"Cragpoint\", \"Burnpass\", \"Mudspire\", \"Wretchend\", \"Redhollow\", \"Saltmoor\", \"Scraptown\", \"Charcliff\", \"Dryreach\", \"Ragbank\", \"Blightden\", \"Boneplain\", \"Rustbarrow\", \"Smokefall\", \"Shivglen\", \"Flintgorge\", \"Gravefen\", \"Scorchbay\", \"Fogscar\", \"Ruinstep\", \"Crimsonlot\"];\n  const generateInitialGrid = () => {\n    const grid = [];\n    const center = Math.floor(GRID_SIZE / 2);\n    for (let y = 0; y < GRID_SIZE; y++) {\n      for (let x = 0; x < GRID_SIZE; x++) {\n        const isBase = x === center && y === center;\n        grid.push({\n          id: `${x}-${y}`,\n          name: isBase ? 'Base' : `Location ${x}-${y}`,\n          description: isBase ? 'Your base of operations' : 'An unexplored location',\n          position: {\n            x,\n            y\n          },\n          discovered: isBase,\n          scavenged: false,\n          isBase,\n          owner: isBase ? 'player' : null,\n          scavengeTime: isBase ? 0 : Math.floor(Math.random() * 60) + 30,\n          lastScavenged: null\n        });\n      }\n    }\n    return grid;\n  };\n  const resourcesRef = useRef(resources);\n  const upgradesRef = useRef(upgrades);\n  useEffect(() => {\n    resourcesRef.current = resources;\n  }, [resources]);\n  useEffect(() => {\n    upgradesRef.current = upgrades;\n  }, [upgrades]);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    if (savedGame) {\n      const {\n        resources: savedResources,\n        upgrades: savedUpgrades,\n        locations: savedLocations\n      } = JSON.parse(savedGame);\n      setResources(savedResources);\n      setUpgrades(savedUpgrades);\n      setLocations(savedLocations);\n    }\n  }, []);\n  useEffect(() => {\n    const autoSave = () => {\n      localStorage.setItem(SAVE_KEY, JSON.stringify({\n        resources,\n        upgrades,\n        locations\n      }));\n    };\n    const interval = setInterval(autoSave, AUTO_SAVE_INTERVAL);\n    return () => clearInterval(interval);\n  }, [resources, upgrades, locations]);\n  function floorResources(res) {\n    return {\n      food: Math.floor(res.food),\n      water: Math.floor(res.water),\n      materials: Math.floor(res.materials),\n      survivors: Math.floor(res.survivors)\n    };\n  }\n  function isEqualResources(a, b) {\n    return a.food === b.food && a.water === b.water && a.materials === b.materials && a.survivors === b.survivors;\n  }\n  useEffect(() => {\n    const gameLoop = () => {\n      // Update resources based on buildings and upgrades\n      const newResources = {\n        ...resources\n      };\n\n      // Apply building production\n      buildings.forEach(building => {\n        Object.entries(building.production).forEach(([resource, amount]) => {\n          newResources[resource] += amount;\n        });\n      });\n\n      // Apply upgrade effects\n      upgrades.forEach(upgrade => {\n        const effect = upgrade.effect(upgrade.level);\n        Object.entries(effect).forEach(([resource, amount]) => {\n          newResources[resource] += amount;\n        });\n      });\n\n      // Check for disasters\n      disasters.forEach(disaster => {\n        if (Math.random() < disaster.probability) {\n          const effect = disaster.effect(newResources);\n          Object.entries(effect).forEach(([resource, amount]) => {\n            newResources[resource] += amount;\n          });\n          setShowDisaster(disaster);\n          addNotification(`Disaster: ${disaster.name}`, 'error');\n        }\n      });\n\n      // Auto scavenge\n      if (autoScavengeEnabled) {\n        locations.forEach(loc => {\n          if (loc.scavengeTime && loc.scavengeTime > 0 && !loc.lastScavenged) {\n            const scavengeAmount = Math.floor(Math.random() * 10) + 5;\n            newResources.materials += scavengeAmount;\n            addNotification(`Auto scavenged ${scavengeAmount} materials from ${loc.name}`, 'info');\n            loc.lastScavenged = Date.now();\n          }\n        });\n      }\n      setResources(newResources);\n    };\n    gameLoopRef.current = setInterval(gameLoop, 1000);\n    return () => {\n      if (gameLoopRef.current) {\n        clearInterval(gameLoopRef.current);\n      }\n    };\n  }, [resources, buildings, upgrades, locations, autoScavengeEnabled]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (waitingForScavengePopup || scavengeResult) return;\n      const finished = locations.find(loc => loc.lastScavenged && loc.scavengeTime > 0 && now - loc.lastScavenged >= loc.scavengeTime);\n      if (finished) finalizeScavenge(finished);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [locations, waitingForScavengePopup, scavengeResult]);\n  const applyDisaster = disaster => {\n    setResources(prev => ({\n      food: Math.max(0, prev.food + (disaster.effect.food || 0)),\n      water: Math.max(0, prev.water + (disaster.effect.water || 0)),\n      materials: Math.max(0, prev.materials + (disaster.effect.materials || 0)),\n      survivors: Math.max(1, prev.survivors + (disaster.effect.survivors || 0))\n    }));\n  };\n  const checkAutoScavenge = () => {\n    if (waitingForScavengePopup) return;\n    const now = Date.now();\n    setLocations(prev => {\n      let hasActiveScavenge = false;\n      let updated = false;\n      const newLocations = prev.map(loc => {\n        if (loc.lastScavenged && loc.scavengeTime > 0) {\n          if (now - loc.lastScavenged >= loc.scavengeTime && !updated) {\n            const loot = {\n              food: loc.resources.food || 0,\n              water: loc.resources.water || 0,\n              materials: loc.resources.materials || 0,\n              survivors: loc.resources.survivors || 0\n            };\n            finalizeScavenge(loc);\n            updated = true;\n            return loc;\n          }\n          hasActiveScavenge = true;\n          return loc;\n        }\n        return loc;\n      });\n      if (!hasActiveScavenge && !updated) {\n        const targetIndex = newLocations.findIndex(loc => loc.discovered && !loc.lastScavenged && loc.scavengeTime > 0 && Object.values(loc.resources).some(v => v && v > 0));\n        if (targetIndex !== -1) {\n          newLocations[targetIndex] = {\n            ...newLocations[targetIndex],\n            lastScavenged: now\n          };\n          updated = true;\n        }\n      }\n      return newLocations;\n    });\n  };\n  const addNotification = (message, type = 'info') => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const notification = {\n      id,\n      message,\n      type,\n      timestamp: Date.now()\n    };\n    setNotifications(prev => [...prev, notification]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, 5000);\n  };\n  const finalizeScavenge = location => {\n    const loot = {\n      food: location.resources.food || 0,\n      water: location.resources.water || 0,\n      materials: location.resources.materials || 0,\n      survivors: location.resources.survivors || 0\n    };\n    const resourceMessages = Object.entries(loot).filter(([_, value]) => value > 0).map(([resource, value]) => `${value} ${resource}`).join(', ');\n    if (resourceMessages) {\n      addNotification(`Found resources: ${resourceMessages}`, 'success');\n    }\n    setResources(prevResources => ({\n      food: prevResources.food + loot.food,\n      water: prevResources.water + loot.water,\n      materials: prevResources.materials + loot.materials,\n      survivors: prevResources.survivors + loot.survivors\n    }));\n    setLocations(prev => prev.map(loc => loc.id === location.id ? {\n      ...loc,\n      lastScavenged: null,\n      resources: {},\n      wasScavenged: true\n    } : loc));\n  };\n  const handleMapClick = (e, location) => {\n    e.stopPropagation();\n    if (!location.discovered && location.id !== \"base\") return;\n    setSelectedLocation(location);\n    setRadialMenuPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n    setShowRadialMenu(true);\n  };\n  const scavengeLocation = location => {\n    if (location.lastScavenged || location.scavengeTime === 0) return;\n    setLocations(prev => prev.map(loc => loc.id === location.id ? {\n      ...loc,\n      lastScavenged: Date.now()\n    } : loc));\n    setShowRadialMenu(false);\n  };\n  const exploreNearby = () => {\n    if (!selectedLocation) return;\n    const cost = EXPLORATION_COST;\n    const canAfford = Object.entries(cost).every(([resource, amount]) => resources[resource] >= (amount || 0));\n    if (!canAfford) {\n      setShowAttackResult({\n        success: false,\n        locationName: \"Exploration\",\n        survivorsLost: 0\n      });\n      setShowRadialMenu(false);\n      return;\n    }\n    setResources(prev => {\n      const newResources = {\n        ...prev\n      };\n      Object.entries(cost).forEach(([resource, amount]) => {\n        newResources[resource] -= amount || 0;\n      });\n      return newResources;\n    });\n    const getGridCoords = id => {\n      const match = id.match(/cell-(\\d+)-(\\d+)/);\n      if (!match) return null;\n      return {\n        x: parseInt(match[1]),\n        y: parseInt(match[2])\n      };\n    };\n    const selectedCoords = getGridCoords(selectedLocation.id);\n    if (!selectedCoords) return;\n    setLocations(prev => prev.map(loc => {\n      const coords = getGridCoords(loc.id);\n      if (!coords || loc.discovered) return loc;\n      const dx = Math.abs(coords.x - selectedCoords.x);\n      const dy = Math.abs(coords.y - selectedCoords.y);\n      if (dx <= 1 && dy <= 1) {\n        return {\n          ...loc,\n          discovered: true\n        };\n      }\n      return loc;\n    }));\n    setShowRadialMenu(false);\n  };\n  const purchaseUpgrade = upgrade => {\n    if (upgrade.level >= upgrade.maxLevel) return;\n    const canAfford = Object.entries(upgrade.cost).every(([resource, amount]) => resources[resource] >= amount);\n    if (!canAfford) {\n      addNotification('Not enough resources to purchase upgrade', 'error');\n      return;\n    }\n\n    // Deduct cost\n    const newResources = {\n      ...resources\n    };\n    Object.entries(upgrade.cost).forEach(([resource, amount]) => {\n      newResources[resource] -= amount;\n    });\n\n    // Apply upgrade\n    const newUpgrades = upgrades.map(u => u.id === upgrade.id ? {\n      ...u,\n      level: u.level + 1\n    } : u);\n    setResources(newResources);\n    setUpgrades(newUpgrades);\n    addNotification(`Upgraded ${upgrade.name} to level ${upgrade.level + 1}`, 'success');\n  };\n  const getScavengeProgress = location => {\n    if (!location.lastScavenged || location.scavengeTime === 0) return 0;\n    const elapsed = Date.now() - location.lastScavenged;\n    return Math.min(100, elapsed / location.scavengeTime * 100);\n  };\n  const attackLocation = location => {\n    const success = Math.random() < 0.7;\n    if (success) {\n      const materialsGained = 20 + Math.floor(Math.random() * 30);\n      setResources(prev => ({\n        ...prev,\n        materials: prev.materials + materialsGained\n      }));\n      setLocations(prev => prev.map(loc => loc.id === location.id ? {\n        ...loc,\n        owner: \"player\"\n      } : loc));\n      setShowAttackResult({\n        success: true,\n        locationName: location.name,\n        resourcesGained: {\n          materials: materialsGained\n        }\n      });\n      setShowAttackedAnimation(location.id);\n    } else {\n      const survivorsLost = 1;\n      setResources(prev => ({\n        ...prev,\n        survivors: Math.max(0, prev.survivors - survivorsLost)\n      }));\n      setShowAttackResult({\n        success: false,\n        locationName: location.name,\n        survivorsLost: survivorsLost\n      });\n    }\n    setShowRadialMenu(false);\n  };\n  const buyBackLocation = location => {\n    const cost = {\n      materials: 50\n    };\n    const canAfford = Object.entries(cost).every(([resource, amount]) => resources[resource] >= (amount || 0));\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(cost).forEach(([resource, amount]) => {\n          newResources[resource] -= amount || 0;\n        });\n        return newResources;\n      });\n      setLocations(prev => prev.map(loc => loc.id === location.id ? {\n        ...loc,\n        owner: \"player\"\n      } : loc));\n      setShowAttackedAnimation(location.id);\n      setShowRadialMenu(false);\n    } else {\n      console.log(\"Cannot afford to buy back this location.\");\n    }\n  };\n  const startNewGame = () => {\n    setResources(initialResources);\n    setUpgrades(initialUpgrades);\n    setLocations(generateInitialGrid());\n    setBuildings([]);\n    setIsFirstTimeUser(false);\n    setIsGameOver(false);\n    addNotification('New game started!', 'success');\n  };\n  useEffect(() => {\n    if (showAttackedAnimation) {\n      const timer = setTimeout(() => {\n        setShowAttackedAnimation(null);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [showAttackedAnimation]);\n  const GameOver = () => {\n    if (!isGameOver) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-red-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-red-500 mb-6 drop-shadow-md\",\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-lg mb-8\",\n          children: \"All your survivors have perished. The wasteland has claimed another settlement.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            className: \"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-green-600 to-green-800 hover:from-green-700 hover:to-green-900 text-white\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this);\n  };\n  const NewGame = () => {\n    if (!isFirstTimeUser) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md\",\n          children: \"Welcome to Wasteland Survivor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-lg mb-8\",\n          children: \"Lead your survivors through the post-apocalyptic wasteland. Gather resources, expand your territory, and survive against all odds.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            className: \"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\",\n            children: \"Start New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this);\n  };\n  const Notifications = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50 space-y-2\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 ${notification.type === 'success' ? 'bg-green-600' : notification.type === 'error' ? 'bg-red-600' : 'bg-blue-600'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white font-medium\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 11\n      }, this)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 670,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (resources.survivors <= 0 && !isGameOver) {\n      setIsGameOver(true);\n    }\n  }, [resources.survivors, isGameOver]);\n  const triggerAIAttack = () => {\n    const playerOwnedLocations = locations.filter(loc => loc.owner === \"player\" && !loc.isBase);\n    if (playerOwnedLocations.length > 0) {\n      const targetLocation = playerOwnedLocations[Math.floor(Math.random() * playerOwnedLocations.length)];\n      const success = Math.random() < 0.75;\n      setShowAttackedAnimation(targetLocation.id);\n      if (success) {\n        setLocations(prev => prev.map(loc => loc.id === targetLocation.id ? {\n          ...loc,\n          owner: null\n        } : loc));\n        setResources(prev => ({\n          ...prev,\n          survivors: Math.max(0, prev.survivors - 1)\n        }));\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: true,\n          survivorsLost: 1\n        });\n      } else {\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: false\n        });\n      }\n    }\n  };\n  const HowToPlay = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-2xl shadow-2xl text-center animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md font-display\",\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-200 text-lg space-y-4 text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome to Wasteland Survivor! Your goal is to lead your group of survivors through a post-apocalyptic world. Here's how to play:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Resources:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gather Food, Water, Materials, and manage your Survivors. These are essential for survival and progress.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Map & Exploration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on map locations to open a radial menu. You can Scavenge locations for resources, Attack rival locations to take them over, or Explore nearby to discover new areas. Exploring costs materials.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Buildings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"From the Resources panel, you can drag and drop buildings like Houses onto available map squares. Houses provide shelter for your survivors; without enough housing, survivors will freeze and die!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Upgrades:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Invest in base upgrades to increase your resource production and survivor attraction.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Threats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Beware of random Disasters and Rival Clan attacks. These events can deplete your resources and survivors, so be prepared!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xl font-semibold text-blue-300 mt-4\",\n            children: \"Game Over:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The game ends if all your survivors are lost. You can always start a new game to try again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHowToPlay(false),\n          className: \"w-full mt-8 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\",\n          children: \"Got It!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this);\n  };\n  const MapView = ({\n    buildings,\n    availableBuildings,\n    setBuildings,\n    setResources,\n    locations,\n    showAttackedAnimation\n  }) => {\n    const handleDragOver = e => {\n      e.preventDefault();\n    };\n    const handleDrop = (e, locationId) => {\n      e.preventDefault();\n      const buildingId = e.dataTransfer.getData(\"buildingId\");\n      const buildingBlueprint = availableBuildings.find(b => b.id === buildingId);\n      const targetLocation = locations.find(loc => loc.id === locationId);\n      if (!buildingBlueprint || !targetLocation) return;\n      const isLocationOccupied = buildings.some(b => b.locationId === locationId);\n      if (!targetLocation.discovered || targetLocation.owner !== \"player\" || targetLocation.isBase || isLocationOccupied) {\n        return;\n      }\n      const canAfford = Object.entries(buildingBlueprint.cost).every(([resource, cost]) => resources[resource] >= (cost || 0));\n      if (!canAfford) {\n        return;\n      }\n      setResources(prev => {\n        const newResources = {\n          ...prev\n        };\n        Object.entries(buildingBlueprint.cost).forEach(([resource, cost]) => {\n          newResources[resource] -= cost || 0;\n        });\n        return newResources;\n      });\n      const newBuilding = {\n        ...buildingBlueprint,\n        id: `${buildingBlueprint.type}-${Date.now()}`,\n        locationId: locationId\n      };\n      setBuildings(prev => [...prev, newBuilding]);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-gray-900 border border-gray-700 rounded-xl p-4 sm:p-8 shadow-2xl h-full flex flex-col overflow-hidden before:absolute before:inset-0 before:bg-gradient-to-br before:from-gray-800 before:via-gray-900 before:to-black before:opacity-50 before:rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"relative z-10 text-2xl sm:text-4xl font-black text-white mb-4 sm:mb-8 text-center drop-shadow-md\",\n        children: \"Wasteland Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 grid bg-gray-950 border border-gray-700 rounded-lg aspect-square shadow-inner overflow-hidden\",\n        style: {\n          gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\n          gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`\n        },\n        onClick: () => setShowRadialMenu(false),\n        children: locations.map(location => {\n          const isAnimatingTakeover = showAttackedAnimation === location.id;\n          const placedBuilding = buildings.find(b => b.locationId === location.id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `relative flex items-center justify-center p-0.5 sm:p-1 transition-all duration-300 group ${location.discovered ? \"cursor-pointer\" : \"opacity-30\"} ${isAnimatingTakeover ? 'animate-pulse' : ''} ${location.id === showAttackedAnimation ? 'border-2 sm:border-4 border-red-500 animate-pulse-fast' : ''}`,\n            onClick: e => handleMapClick(e, location),\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, location.id),\n            children: location.discovered ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full h-full flex flex-col items-center justify-center text-center rounded-md overflow-hidden shadow-md group-hover:shadow-lg transition-shadow duration-300 border border-transparent group-hover:border-blue-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-full h-full flex items-center justify-center text-2xl sm:text-4xl transform transition-all duration-300 group-hover:scale-105 ${location.isBase || location.owner === \"player\" ? \"bg-green-700\" : \"bg-blue-700\"}`,\n                children: placedBuilding ? placedBuilding.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: placedBuilding.imageUrl,\n                  alt: placedBuilding.name,\n                  className: \"w-8 h-8 sm:w-10 sm:h-10 object-contain mx-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(BaseIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 27\n                }, this) : location.isBase ? /*#__PURE__*/_jsxDEV(BaseIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 27\n                }, this) : location.owner === \"player\" ? /*#__PURE__*/_jsxDEV(ResourcesIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 870,\n                  columnNumber: 27\n                }, this) : location.resources && Object.values(location.resources).some(val => val && val > 0) ? /*#__PURE__*/_jsxDEV(ResourcesIcon, {\n                  className: \"w-8 h-8 sm:w-10 sm:h-10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 27\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute bottom-0 left-0 right-0 bg-gray-800 bg-opacity-80 p-0.5 text-center backdrop-blur-sm group-hover:bg-opacity-90 transition-opacity\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-[8px] sm:text-xs font-medium text-gray-200 truncate\",\n                  children: location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 21\n              }, this), location.lastScavenged && location.scavengeTime > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-0 left-0 right-0 h-0.5 sm:h-1 bg-gray-700 rounded-t\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-full bg-yellow-500 rounded-t transition-all duration-1000\",\n                  style: {\n                    width: `${getScavengeProgress(location)}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 883,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-full rounded-md bg-gray-800 flex items-center justify-center text-2xl sm:text-4xl opacity-50 animate-pulse border border-gray-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 19\n            }, this)\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-950 text-white font-outfit antialiased relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-0 opacity-10 pointer-events-none\",\n      style: {\n        backgroundImage: `url('https://www.transparenttextures.com/patterns/dust-and-stones.png')`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 7\n    }, this), !isGameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 px-2 py-4 h-screen flex flex-col bg-gray-950 bg-opacity-95 pointer-events-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-black text-center mb-4 text-white drop-shadow-lg leading-tight tracking-tight\",\n          children: [\"Wasteland\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 17\n          }, this), \"Survivor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-4 bg-gray-800 rounded-lg p-1 shadow-inner border border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"resources\"),\n            className: `flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${activeTab === \"resources\" ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"}`,\n            children: \"Resources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"map\"),\n            className: `flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${activeTab === \"map\" ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"}`,\n            children: \"Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 15\n        }, this), activeTab === \"resources\" ? /*#__PURE__*/_jsxDEV(ResourcePanel, {\n          resources: resources,\n          upgrades: upgrades,\n          autoScavengeEnabled: autoScavengeEnabled,\n          purchaseUpgrade: purchaseUpgrade,\n          setAutoScavengeEnabled: setAutoScavengeEnabled,\n          availableBuildings: availableBuildings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(MapView, {\n            buildings: buildings,\n            availableBuildings: availableBuildings,\n            setBuildings: setBuildings,\n            setResources: setResources,\n            locations: locations,\n            showAttackedAnimation: showAttackedAnimation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 flex h-screen p-8 gap-8 bg-gray-950 bg-opacity-95\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl font-black mb-8 text-white drop-shadow-lg leading-tight text-center tracking-tight\",\n            children: [\"Wasteland\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 19\n            }, this), \"Survivor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ResourcePanel, {\n            resources: resources,\n            upgrades: upgrades,\n            autoScavengeEnabled: autoScavengeEnabled,\n            purchaseUpgrade: purchaseUpgrade,\n            setAutoScavengeEnabled: setAutoScavengeEnabled,\n            availableBuildings: availableBuildings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 flex flex-col h-full\",\n          children: /*#__PURE__*/_jsxDEV(MapView, {\n            buildings: buildings,\n            availableBuildings: availableBuildings,\n            setBuildings: setBuildings,\n            setResources: setResources,\n            locations: locations,\n            showAttackedAnimation: showAttackedAnimation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), !isGameOver && !isFirstTimeUser && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHowToPlay(true),\n      className: \"fixed bottom-4 right-4 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white z-40\",\n      children: \"How to Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 9\n    }, this), (showRadialMenu || showDisaster || scavengeResult || showAttackResult || showAIAttack || isGameOver || isFirstTimeUser || showHowToPlay) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center pointer-events-auto\",\n      onClick: e => {\n        if (e.target === e.currentTarget) {\n          setShowRadialMenu(false);\n          setShowDisaster(null);\n          setScavengeResult(null);\n          setShowAttackResult(null);\n          setShowAIAttack(null);\n          setShowHowToPlay(false);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(RadialMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisasterPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScavengePopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AttackResultPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AIAttackPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NewGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 902,\n    columnNumber: 5\n  }, this);\n};\n_s(ApocalypticGame, \"4SSeoKB6Y93k1CvKKag1BESaIXE=\");\n_c = ApocalypticGame;\nexport default ApocalypticGame;\nvar _c;\n$RefreshReg$(_c, \"ApocalypticGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ResourcePanel","jsxDEV","_jsxDEV","Fragment","_Fragment","SAVE_KEY","AUTO_SAVE_INTERVAL","DISASTER_CHANCE","AI_ATTACK_CHANCE","HOUSE_CAPACITY","UNHOUSED_SURVIVOR_DEATH_RATE","EXPLORATION_COST","materials","initialResources","food","water","survivors","initialUpgrades","id","name","description","level","maxLevel","cost","effect","disasters","resources","probability","Math","floor","availableBuildings","production","type","imageUrl","ApocalypticGame","_s","setResources","upgrades","setUpgrades","activeTab","setActiveTab","isMobile","setIsMobile","showRadialMenu","setShowRadialMenu","radialMenuPosition","setRadialMenuPosition","x","y","selectedLocation","setSelectedLocation","showDisaster","setShowDisaster","autoScavengeEnabled","setAutoScavengeEnabled","buildings","setBuildings","scavengeResult","setScavengeResult","showAttackResult","setShowAttackResult","showAIAttack","setShowAIAttack","showAttackedAnimation","setShowAttackedAnimation","showHowToPlay","setShowHowToPlay","waitingForScavengePopup","setWaitingForScavengePopup","notifications","setNotifications","isFirstTimeUser","setIsFirstTimeUser","savedGame","localStorage","getItem","isGameOver","setIsGameOver","locations","setLocations","generateInitialGrid","gameLoopRef","autoSaveRef","GRID_SIZE","locationNames","grid","center","isBase","push","position","discovered","scavenged","owner","scavengeTime","random","lastScavenged","resourcesRef","upgradesRef","current","handleResize","window","innerWidth","addEventListener","removeEventListener","savedResources","savedUpgrades","savedLocations","JSON","parse","autoSave","setItem","stringify","interval","setInterval","clearInterval","floorResources","res","isEqualResources","a","b","gameLoop","newResources","forEach","building","Object","entries","resource","amount","upgrade","disaster","addNotification","loc","scavengeAmount","Date","now","finished","find","finalizeScavenge","applyDisaster","prev","max","checkAutoScavenge","hasActiveScavenge","updated","newLocations","map","loot","targetIndex","findIndex","values","some","v","message","toString","substr","notification","timestamp","setTimeout","filter","n","location","resourceMessages","_","value","join","prevResources","wasScavenged","handleMapClick","e","stopPropagation","clientX","clientY","scavengeLocation","exploreNearby","canAfford","every","success","locationName","survivorsLost","getGridCoords","match","parseInt","selectedCoords","coords","dx","abs","dy","purchaseUpgrade","newUpgrades","u","getScavengeProgress","elapsed","min","attackLocation","materialsGained","resourcesGained","buyBackLocation","console","log","startNewGame","timer","clearTimeout","GameOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","NewGame","Notifications","triggerAIAttack","playerOwnedLocations","length","targetLocation","locationId","HowToPlay","MapView","handleDragOver","preventDefault","handleDrop","buildingId","dataTransfer","getData","buildingBlueprint","isLocationOccupied","newBuilding","style","gridTemplateColumns","gridTemplateRows","isAnimatingTakeover","placedBuilding","onDragOver","onDrop","src","alt","BaseIcon","ResourcesIcon","val","width","backgroundImage","backgroundSize","backgroundAttachment","target","currentTarget","RadialMenu","DisasterPopup","ScavengePopup","AttackResultPopup","AIAttackPopup","_c","$RefreshReg$"],"sources":["/Users/faybennett/outlierTasks/game-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { ResourcePanel } from './components/ResourcePanel';\nimport { AIAttack, BaseUpgrade, Building, Disaster, MapLocation, Notification, Resources } from './types';\n\n// Constants\nconst SAVE_KEY = \"apocalypse-idle-save\";\nconst AUTO_SAVE_INTERVAL = 10000;\nconst DISASTER_CHANCE = 0.002;\nconst AI_ATTACK_CHANCE = 0.02;\nconst HOUSE_CAPACITY = 2;\nconst UNHOUSED_SURVIVOR_DEATH_RATE = 0.01;\nconst EXPLORATION_COST = { materials: 20 };\n\n// Initial state\nconst initialResources: Resources = {\n  food: 100,\n  water: 100,\n  materials: 50,\n  survivors: 5,\n};\n\nconst initialUpgrades: BaseUpgrade[] = [\n  {\n    id: 'food_production',\n    name: 'Food Production',\n    description: 'Increases food production rate',\n    level: 1,\n    maxLevel: 5,\n    cost: { materials: 50 },\n    effect: (level) => ({ food: level * 0.2 }),\n  },\n  {\n    id: 'water_production',\n    name: 'Water Production',\n    description: 'Increases water production rate',\n    level: 1,\n    maxLevel: 5,\n    cost: { materials: 50 },\n    effect: (level) => ({ water: level * 0.2 }),\n  },\n  {\n    id: 'material_production',\n    name: 'Material Production',\n    description: 'Increases material production rate',\n    level: 1,\n    maxLevel: 5,\n    cost: { materials: 50 },\n    effect: (level) => ({ materials: level * 0.2 }),\n  },\n];\n\nconst disasters: Disaster[] = [\n  {\n    id: 'food_shortage',\n    name: 'Food Shortage',\n    description: 'A severe food shortage has occurred!',\n    effect: (resources) => ({ food: -resources.food * 0.2 }),\n    probability: 0.1,\n  },\n  {\n    id: 'water_contamination',\n    name: 'Water Contamination',\n    description: 'The water supply has been contaminated!',\n    effect: (resources) => ({ water: -resources.water * 0.2 }),\n    probability: 0.1,\n  },\n  {\n    id: 'survivor_loss',\n    name: 'Survivor Loss',\n    description: 'Some survivors have perished!',\n    effect: (resources) => ({ survivors: -Math.floor(resources.survivors * 0.1) }),\n    probability: 0.05,\n  },\n];\n\nconst availableBuildings: Building[] = [\n  {\n    id: 'house',\n    name: 'House',\n    description: 'Provides shelter for survivors',\n    cost: { materials: 30, food: 10 },\n    production: { survivors: 0.1 },\n    type: 'house',\n    level: 0,\n    imageUrl: 'https://img.icons8.com/ios-filled/50/ffffff/home.png',\n  },\n  {\n    id: 'water_collector',\n    name: 'Water Collector',\n    description: 'Collects water from the atmosphere',\n    cost: { materials: 40 },\n    production: { water: 0.3 },\n    type: 'water_collector',\n    level: 0,\n  },\n];\n\nconst ApocalypticGame: React.FC = () => {\n  // State\n  const [resources, setResources] = useState<Resources>(initialResources);\n  const [upgrades, setUpgrades] = useState<BaseUpgrade[]>(initialUpgrades);\n  const [activeTab, setActiveTab] = useState<\"resources\" | \"map\">(\"resources\");\n  const [isMobile, setIsMobile] = useState(false);\n  const [showRadialMenu, setShowRadialMenu] = useState(false);\n  const [radialMenuPosition, setRadialMenuPosition] = useState({ x: 0, y: 0 });\n  const [selectedLocation, setSelectedLocation] = useState<MapLocation | null>(null);\n  const [showDisaster, setShowDisaster] = useState<Disaster | null>(null);\n  const [autoScavengeEnabled, setAutoScavengeEnabled] = useState(true);\n  const [buildings, setBuildings] = useState<Building[]>([]);\n  const [scavengeResult, setScavengeResult] = useState<Partial<Resources> | null>(null);\n  const [showAttackResult, setShowAttackResult] = useState<{ success: boolean; locationName: string; resourcesGained?: Partial<Resources>; survivorsLost?: number } | null>(null);\n  const [showAIAttack, setShowAIAttack] = useState<AIAttack | null>(null);\n  const [showAttackedAnimation, setShowAttackedAnimation] = useState<string | null>(null);\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [waitingForScavengePopup, setWaitingForScavengePopup] = useState(false);\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [isFirstTimeUser, setIsFirstTimeUser] = useState(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    return !savedGame;\n  });\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [locations, setLocations] = useState<MapLocation[]>(generateInitialGrid());\n\n  const gameLoopRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  const autoSaveRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const GRID_SIZE = 5;\n\n  const locationNames = [\n    \"Dustfield\",\n    \"Ashrock\",\n    \"Ironpit\",\n    \"Deadwell\",\n    \"Cragpoint\",\n    \"Burnpass\",\n    \"Mudspire\",\n    \"Wretchend\",\n    \"Redhollow\",\n    \"Saltmoor\",\n    \"Scraptown\",\n    \"Charcliff\",\n    \"Dryreach\",\n    \"Ragbank\",\n    \"Blightden\",\n    \"Boneplain\",\n    \"Rustbarrow\",\n    \"Smokefall\",\n    \"Shivglen\",\n    \"Flintgorge\",\n    \"Gravefen\",\n    \"Scorchbay\",\n    \"Fogscar\",\n    \"Ruinstep\",\n    \"Crimsonlot\",\n  ];\n\n  const generateInitialGrid = (): MapLocation[] => {\n    const grid: MapLocation[] = [];\n    const center = Math.floor(GRID_SIZE / 2);\n\n    for (let y = 0; y < GRID_SIZE; y++) {\n      for (let x = 0; x < GRID_SIZE; x++) {\n        const isBase = x === center && y === center;\n        grid.push({\n          id: `${x}-${y}`,\n          name: isBase ? 'Base' : `Location ${x}-${y}`,\n          description: isBase ? 'Your base of operations' : 'An unexplored location',\n          position: { x, y },\n          discovered: isBase,\n          scavenged: false,\n          isBase,\n          owner: isBase ? 'player' : null,\n          scavengeTime: isBase ? 0 : Math.floor(Math.random() * 60) + 30,\n          lastScavenged: null,\n        });\n      }\n    }\n    return grid;\n  };\n\n  const resourcesRef = useRef(resources);\n  const upgradesRef = useRef(upgrades);\n\n  useEffect(() => {\n    resourcesRef.current = resources;\n  }, [resources]);\n  useEffect(() => {\n    upgradesRef.current = upgrades;\n  }, [upgrades]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const savedGame = localStorage.getItem(SAVE_KEY);\n    if (savedGame) {\n      const { resources: savedResources, upgrades: savedUpgrades, locations: savedLocations } = JSON.parse(savedGame);\n      setResources(savedResources);\n      setUpgrades(savedUpgrades);\n      setLocations(savedLocations);\n    }\n  }, []);\n\n  useEffect(() => {\n    const autoSave = () => {\n      localStorage.setItem(\n        SAVE_KEY,\n        JSON.stringify({\n          resources,\n          upgrades,\n          locations,\n        })\n      );\n    };\n\n    const interval = setInterval(autoSave, AUTO_SAVE_INTERVAL);\n    return () => clearInterval(interval);\n  }, [resources, upgrades, locations]);\n\n  function floorResources(res: Resources): Resources {\n    return {\n      food: Math.floor(res.food),\n      water: Math.floor(res.water),\n      materials: Math.floor(res.materials),\n      survivors: Math.floor(res.survivors),\n    };\n  }\n\n  function isEqualResources(a: Resources, b: Resources): boolean {\n    return (\n      a.food === b.food &&\n      a.water === b.water &&\n      a.materials === b.materials &&\n      a.survivors === b.survivors\n    );\n  }\n\n  useEffect(() => {\n    const gameLoop = () => {\n      // Update resources based on buildings and upgrades\n      const newResources = { ...resources };\n      \n      // Apply building production\n      buildings.forEach((building) => {\n        Object.entries(building.production).forEach(([resource, amount]) => {\n          newResources[resource as keyof Resources] += amount;\n        });\n      });\n\n      // Apply upgrade effects\n      upgrades.forEach((upgrade) => {\n        const effect = upgrade.effect(upgrade.level);\n        Object.entries(effect).forEach(([resource, amount]) => {\n          newResources[resource as keyof Resources] += amount;\n        });\n      });\n\n      // Check for disasters\n      disasters.forEach((disaster) => {\n        if (Math.random() < disaster.probability) {\n          const effect = disaster.effect(newResources);\n          Object.entries(effect).forEach(([resource, amount]) => {\n            newResources[resource as keyof Resources] += amount;\n          });\n          setShowDisaster(disaster);\n          addNotification(`Disaster: ${disaster.name}`, 'error');\n        }\n      });\n\n      // Auto scavenge\n      if (autoScavengeEnabled) {\n        locations.forEach((loc) => {\n          if (loc.scavengeTime && loc.scavengeTime > 0 && !loc.lastScavenged) {\n            const scavengeAmount = Math.floor(Math.random() * 10) + 5;\n            newResources.materials += scavengeAmount;\n            addNotification(`Auto scavenged ${scavengeAmount} materials from ${loc.name}`, 'info');\n            loc.lastScavenged = Date.now();\n          }\n        });\n      }\n\n      setResources(newResources);\n    };\n\n    gameLoopRef.current = setInterval(gameLoop, 1000);\n    return () => {\n      if (gameLoopRef.current) {\n        clearInterval(gameLoopRef.current);\n      }\n    };\n  }, [resources, buildings, upgrades, locations, autoScavengeEnabled]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (waitingForScavengePopup || scavengeResult) return;\n\n      const finished = locations.find(\n        (loc) =>\n          loc.lastScavenged &&\n          loc.scavengeTime > 0 &&\n          now - loc.lastScavenged >= loc.scavengeTime,\n      );\n\n      if (finished) finalizeScavenge(finished);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [locations, waitingForScavengePopup, scavengeResult]);\n\n  const applyDisaster = (disaster: Disaster) => {\n    setResources((prev) => ({\n      food: Math.max(0, prev.food + (disaster.effect.food || 0)),\n      water: Math.max(0, prev.water + (disaster.effect.water || 0)),\n      materials: Math.max(0, prev.materials + (disaster.effect.materials || 0)),\n      survivors: Math.max(1, prev.survivors + (disaster.effect.survivors || 0)),\n    }));\n  };\n\n  const checkAutoScavenge = () => {\n    if (waitingForScavengePopup) return;\n\n    const now = Date.now();\n\n    setLocations((prev) => {\n      let hasActiveScavenge = false;\n      let updated = false;\n\n      const newLocations = prev.map((loc) => {\n        if (loc.lastScavenged && loc.scavengeTime > 0) {\n          if (now - loc.lastScavenged >= loc.scavengeTime && !updated) {\n            const loot = {\n              food: loc.resources.food || 0,\n              water: loc.resources.water || 0,\n              materials: loc.resources.materials || 0,\n              survivors: loc.resources.survivors || 0,\n            };\n\n            finalizeScavenge(loc);\n            updated = true;\n            return loc;\n          }\n\n          hasActiveScavenge = true;\n          return loc;\n        }\n\n        return loc;\n      });\n\n      if (!hasActiveScavenge && !updated) {\n        const targetIndex = newLocations.findIndex(\n          (loc) =>\n            loc.discovered &&\n            !loc.lastScavenged &&\n            loc.scavengeTime > 0 &&\n            Object.values(loc.resources).some((v) => v && v > 0),\n        );\n\n        if (targetIndex !== -1) {\n          newLocations[targetIndex] = {\n            ...newLocations[targetIndex],\n            lastScavenged: now,\n          };\n          updated = true;\n        }\n      }\n\n      return newLocations;\n    });\n  };\n\n  const addNotification = (message: string, type: 'success' | 'error' | 'info' = 'info') => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const notification: Notification = {\n      id,\n      message,\n      type,\n      timestamp: Date.now(),\n    };\n    setNotifications((prev) => [...prev, notification]);\n    setTimeout(() => {\n      setNotifications((prev) => prev.filter((n) => n.id !== id));\n    }, 5000);\n  };\n\n  const finalizeScavenge = (location: MapLocation) => {\n    const loot = {\n      food: location.resources.food || 0,\n      water: location.resources.water || 0,\n      materials: location.resources.materials || 0,\n      survivors: location.resources.survivors || 0,\n    };\n\n    const resourceMessages = Object.entries(loot)\n      .filter(([_, value]) => value > 0)\n      .map(([resource, value]) => `${value} ${resource}`)\n      .join(', ');\n    \n    if (resourceMessages) {\n      addNotification(`Found resources: ${resourceMessages}`, 'success');\n    }\n\n    setResources((prevResources) => ({\n      food: prevResources.food + loot.food,\n      water: prevResources.water + loot.water,\n      materials: prevResources.materials + loot.materials,\n      survivors: prevResources.survivors + loot.survivors,\n    }));\n\n    setLocations((prev) =>\n      prev.map((loc) =>\n        loc.id === location.id\n          ? { ...loc, lastScavenged: null, resources: {}, wasScavenged: true }\n          : loc,\n      ),\n    );\n  };\n\n  const handleMapClick = (\n    e: React.MouseEvent<HTMLDivElement>,\n    location: MapLocation,\n  ) => {\n    e.stopPropagation();\n    if (!location.discovered && location.id !== \"base\") return;\n\n    setSelectedLocation(location);\n    setRadialMenuPosition({ x: e.clientX, y: e.clientY });\n    setShowRadialMenu(true);\n  };\n\n  const scavengeLocation = (location: MapLocation) => {\n    if (location.lastScavenged || location.scavengeTime === 0) return;\n\n    setLocations((prev) =>\n      prev.map((loc) =>\n        loc.id === location.id ? { ...loc, lastScavenged: Date.now() } : loc,\n      ),\n    );\n    setShowRadialMenu(false);\n  };\n\n  const exploreNearby = () => {\n    if (!selectedLocation) return;\n\n    const cost = EXPLORATION_COST;\n    const canAfford = Object.entries(cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= (amount || 0)\n    );\n\n    if (!canAfford) {\n      setShowAttackResult({\n        success: false,\n        locationName: \"Exploration\",\n        survivorsLost: 0,\n      });\n      setShowRadialMenu(false);\n      return;\n    }\n\n    setResources(prev => {\n      const newResources = { ...prev };\n      Object.entries(cost).forEach(([resource, amount]) => {\n        newResources[resource as keyof Resources] -= amount || 0;\n      });\n      return newResources;\n    });\n\n    const getGridCoords = (id: string) => {\n      const match = id.match(/cell-(\\d+)-(\\d+)/);\n      if (!match) return null;\n      return { x: parseInt(match[1]), y: parseInt(match[2]) };\n    };\n\n    const selectedCoords = getGridCoords(selectedLocation.id);\n    if (!selectedCoords) return;\n\n    setLocations((prev) =>\n      prev.map((loc) => {\n        const coords = getGridCoords(loc.id);\n        if (!coords || loc.discovered) return loc;\n\n        const dx = Math.abs(coords.x - selectedCoords.x);\n        const dy = Math.abs(coords.y - selectedCoords.y);\n\n        if (dx <= 1 && dy <= 1) {\n          return { ...loc, discovered: true };\n        }\n\n        return loc;\n      }),\n    );\n\n    setShowRadialMenu(false);\n  };\n\n  const purchaseUpgrade = (upgrade: BaseUpgrade) => {\n    if (upgrade.level >= upgrade.maxLevel) return;\n\n    const canAfford = Object.entries(upgrade.cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= amount\n    );\n\n    if (!canAfford) {\n      addNotification('Not enough resources to purchase upgrade', 'error');\n      return;\n    }\n\n    // Deduct cost\n    const newResources = { ...resources };\n    Object.entries(upgrade.cost).forEach(([resource, amount]) => {\n      newResources[resource as keyof Resources] -= amount;\n    });\n\n    // Apply upgrade\n    const newUpgrades = upgrades.map((u) =>\n      u.id === upgrade.id ? { ...u, level: u.level + 1 } : u\n    );\n\n    setResources(newResources);\n    setUpgrades(newUpgrades);\n    addNotification(`Upgraded ${upgrade.name} to level ${upgrade.level + 1}`, 'success');\n  };\n\n  const getScavengeProgress = (location: MapLocation) => {\n    if (!location.lastScavenged || location.scavengeTime === 0) return 0;\n    const elapsed = Date.now() - location.lastScavenged;\n    return Math.min(100, (elapsed / location.scavengeTime) * 100);\n  };\n\n  const attackLocation = (location: MapLocation) => {\n    const success = Math.random() < 0.7;\n\n    if (success) {\n      const materialsGained = 20 + Math.floor(Math.random() * 30);\n      setResources((prev) => ({\n        ...prev,\n        materials: prev.materials + materialsGained,\n      }));\n      setLocations((prev) =>\n        prev.map((loc) =>\n          loc.id === location.id ? { ...loc, owner: \"player\" } : loc,\n        ),\n      );\n      setShowAttackResult({\n        success: true,\n        locationName: location.name,\n        resourcesGained: { materials: materialsGained },\n      });\n      setShowAttackedAnimation(location.id);\n    } else {\n      const survivorsLost = 1;\n      setResources((prev) => ({\n        ...prev,\n        survivors: Math.max(0, prev.survivors - survivorsLost),\n      }));\n      setShowAttackResult({\n        success: false,\n        locationName: location.name,\n        survivorsLost: survivorsLost,\n      });\n    }\n    setShowRadialMenu(false);\n  };\n\n  const buyBackLocation = (location: MapLocation) => {\n    const cost = { materials: 50 };\n\n    const canAfford = Object.entries(cost).every(\n      ([resource, amount]) => resources[resource as keyof Resources] >= (amount || 0)\n    );\n\n    if (canAfford) {\n      setResources(prev => {\n        const newResources = { ...prev };\n        Object.entries(cost).forEach(([resource, amount]) => {\n          newResources[resource as keyof Resources] -= amount || 0;\n        });\n        return newResources;\n      });\n\n      setLocations(prev =>\n        prev.map(loc =>\n          loc.id === location.id ? { ...loc, owner: \"player\" } : loc\n        )\n      );\n      setShowAttackedAnimation(location.id);\n      setShowRadialMenu(false);\n    } else {\n      console.log(\"Cannot afford to buy back this location.\");\n    }\n  };\n\n  const startNewGame = () => {\n    setResources(initialResources);\n    setUpgrades(initialUpgrades);\n    setLocations(generateInitialGrid());\n    setBuildings([]);\n    setIsFirstTimeUser(false);\n    setIsGameOver(false);\n    addNotification('New game started!', 'success');\n  };\n\n  useEffect(() => {\n    if (showAttackedAnimation) {\n      const timer = setTimeout(() => {\n        setShowAttackedAnimation(null);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [showAttackedAnimation]);\n\n  const GameOver = () => {\n    if (!isGameOver) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-red-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-red-500 mb-6 drop-shadow-md\">\n            Game Over\n          </h3>\n          <p className=\"text-gray-200 text-lg mb-8\">\n            All your survivors have perished. The wasteland has claimed another settlement.\n          </p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={startNewGame}\n              className=\"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-green-600 to-green-800 hover:from-green-700 hover:to-green-900 text-white\"\n            >\n              Start New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const NewGame = () => {\n    if (!isFirstTimeUser) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-md shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md\">\n            Welcome to Wasteland Survivor\n          </h3>\n          <p className=\"text-gray-200 text-lg mb-8\">\n            Lead your survivors through the post-apocalyptic wasteland. Gather resources, expand your territory, and survive against all odds.\n          </p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={startNewGame}\n              className=\"w-full px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\"\n            >\n              Start New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const Notifications = () => (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {notifications.map((notification) => (\n        <div\n          key={notification.id}\n          className={`px-4 py-2 rounded-lg shadow-lg transform transition-all duration-300 ${\n            notification.type === 'success'\n              ? 'bg-green-600'\n              : notification.type === 'error'\n              ? 'bg-red-600'\n              : 'bg-blue-600'\n          }`}\n        >\n          <p className=\"text-white font-medium\">{notification.message}</p>\n        </div>\n      ))}\n    </div>\n  );\n\n  useEffect(() => {\n    if (resources.survivors <= 0 && !isGameOver) {\n      setIsGameOver(true);\n    }\n  }, [resources.survivors, isGameOver]);\n\n  const triggerAIAttack = () => {\n    const playerOwnedLocations = locations.filter(\n      (loc) => loc.owner === \"player\" && !loc.isBase\n    );\n\n    if (playerOwnedLocations.length > 0) {\n      const targetLocation =\n        playerOwnedLocations[Math.floor(Math.random() * playerOwnedLocations.length)];\n      const success = Math.random() < 0.75;\n\n      setShowAttackedAnimation(targetLocation.id);\n\n      if (success) {\n        setLocations((prev) =>\n          prev.map((loc) =>\n            loc.id === targetLocation.id ? { ...loc, owner: null } : loc\n          )\n        );\n        setResources((prev) => ({\n          ...prev,\n          survivors: Math.max(0, prev.survivors - 1),\n        }));\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: true,\n          survivorsLost: 1,\n        });\n      } else {\n        setShowAIAttack({\n          locationId: targetLocation.id,\n          locationName: targetLocation.name,\n          success: false,\n        });\n      }\n    }\n  };\n\n  const HowToPlay = () => {\n    if (!showHowToPlay) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4 pointer-events-auto\">\n        <div className=\"relative bg-gray-900 border border-blue-700 rounded-xl p-8 max-w-2xl shadow-2xl text-center animate-fade-in\">\n          <h3 className=\"text-4xl font-bold text-blue-500 mb-6 drop-shadow-md font-display\">\n            How to Play\n          </h3>\n          <div className=\"text-gray-200 text-lg space-y-4 text-left\">\n            <p>\n              Welcome to Wasteland Survivor! Your goal is to lead your group of survivors through a post-apocalyptic world. Here's how to play:\n            </p>\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Resources:</h4>\n            <p>Gather Food, Water, Materials, and manage your Survivors. These are essential for survival and progress.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Map & Exploration:</h4>\n            <p>Click on map locations to open a radial menu. You can Scavenge locations for resources, Attack rival locations to take them over, or Explore nearby to discover new areas. Exploring costs materials.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Buildings:</h4>\n            <p>From the Resources panel, you can drag and drop buildings like Houses onto available map squares. Houses provide shelter for your survivors; without enough housing, survivors will freeze and die!</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Upgrades:</h4>\n            <p>Invest in base upgrades to increase your resource production and survivor attraction.</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Threats:</h4>\n            <p>Beware of random Disasters and Rival Clan attacks. These events can deplete your resources and survivors, so be prepared!</p>\n\n            <h4 className=\"text-xl font-semibold text-blue-300 mt-4\">Game Over:</h4>\n            <p>The game ends if all your survivors are lost. You can always start a new game to try again!</p>\n          </div>\n          <button\n            onClick={() => setShowHowToPlay(false)}\n            className=\"w-full mt-8 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white\"\n          >\n            Got It!\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const MapView = ({\n    buildings,\n    availableBuildings,\n    setBuildings,\n    setResources,\n    locations,\n    showAttackedAnimation,\n  }: {\n    buildings: Building[];\n    availableBuildings: Building[];\n    setBuildings: React.Dispatch<React.SetStateAction<Building[]>>;\n    setResources: React.Dispatch<React.SetStateAction<Resources>>;\n    locations: MapLocation[];\n    showAttackedAnimation: string | null;\n  }) => {\n    const handleDragOver = (e: React.DragEvent) => {\n      e.preventDefault();\n    };\n\n    const handleDrop = (e: React.DragEvent, locationId: string) => {\n      e.preventDefault();\n      const buildingId = e.dataTransfer.getData(\"buildingId\");\n      const buildingBlueprint = availableBuildings.find((b) => b.id === buildingId);\n      const targetLocation = locations.find((loc) => loc.id === locationId);\n\n      if (!buildingBlueprint || !targetLocation) return;\n\n      const isLocationOccupied = buildings.some(b => b.locationId === locationId);\n      if (!targetLocation.discovered || targetLocation.owner !== \"player\" || targetLocation.isBase || isLocationOccupied) {\n        return;\n      }\n\n      const canAfford = Object.entries(buildingBlueprint.cost).every(\n        ([resource, cost]) => resources[resource as keyof Resources] >= (cost || 0)\n      );\n\n      if (!canAfford) {\n        return;\n      }\n\n      setResources(prev => {\n        const newResources = { ...prev };\n        Object.entries(buildingBlueprint.cost).forEach(([resource, cost]) => {\n          newResources[resource as keyof Resources] -= cost || 0;\n        });\n        return newResources;\n      });\n\n      const newBuilding: Building = {\n        ...buildingBlueprint,\n        id: `${buildingBlueprint.type}-${Date.now()}`,\n        locationId: locationId,\n      };\n      setBuildings(prev => [...prev, newBuilding]);\n    };\n\n    return (\n      <div className=\"relative bg-gray-900 border border-gray-700 rounded-xl p-4 sm:p-8 shadow-2xl h-full flex flex-col overflow-hidden before:absolute before:inset-0 before:bg-gradient-to-br before:from-gray-800 before:via-gray-900 before:to-black before:opacity-50 before:rounded-xl\">\n        <h2 className=\"relative z-10 text-2xl sm:text-4xl font-black text-white mb-4 sm:mb-8 text-center drop-shadow-md\">\n          Wasteland Map\n        </h2>\n        <div\n          className=\"relative z-10 grid bg-gray-950 border border-gray-700 rounded-lg aspect-square shadow-inner overflow-hidden\"\n          style={{\n            gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\n            gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`,\n          }}\n          onClick={() => setShowRadialMenu(false)}\n        >\n          {locations.map((location) => {\n            const isAnimatingTakeover = showAttackedAnimation === location.id;\n            const placedBuilding = buildings.find(b => b.locationId === location.id);\n\n            return (\n              <div\n                key={location.id}\n                className={`relative flex items-center justify-center p-0.5 sm:p-1 transition-all duration-300 group ${location.discovered ? \"cursor-pointer\" : \"opacity-30\"} ${isAnimatingTakeover ? 'animate-pulse' : ''} ${location.id === showAttackedAnimation ? 'border-2 sm:border-4 border-red-500 animate-pulse-fast' : ''}`}\n                onClick={(e) => handleMapClick(e, location)}\n                onDragOver={handleDragOver}\n                onDrop={(e) => handleDrop(e, location.id)}\n              >\n                {location.discovered ? (\n                  <div className=\"relative w-full h-full flex flex-col items-center justify-center text-center rounded-md overflow-hidden shadow-md group-hover:shadow-lg transition-shadow duration-300 border border-transparent group-hover:border-blue-500\">\n                    <div\n                      className={`w-full h-full flex items-center justify-center text-2xl sm:text-4xl transform transition-all duration-300 group-hover:scale-105 ${location.isBase || location.owner === \"player\" ? \"bg-green-700\" : \"bg-blue-700\"}`}\n                    >\n                      {placedBuilding ? (\n                        placedBuilding.imageUrl ? (\n                          <img src={placedBuilding.imageUrl} alt={placedBuilding.name} className=\"w-8 h-8 sm:w-10 sm:h-10 object-contain mx-auto\" />\n                        ) : (\n                          <BaseIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        )\n                      ) : (\n                        location.isBase ? (\n                          <BaseIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        ) : location.owner === \"player\" ? (\n                          <ResourcesIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        ) : location.resources && Object.values(location.resources).some(val => val && val > 0) ? (\n                          <ResourcesIcon className=\"w-8 h-8 sm:w-10 sm:h-10\" />\n                        ) : null\n                      )}\n                    </div>\n                    <div className=\"absolute bottom-0 left-0 right-0 bg-gray-800 bg-opacity-80 p-0.5 text-center backdrop-blur-sm group-hover:bg-opacity-90 transition-opacity\">\n                      <p className=\"text-[8px] sm:text-xs font-medium text-gray-200 truncate\">\n                        {location.name}\n                      </p>\n                    </div>\n                    {location.lastScavenged && location.scavengeTime > 0 && (\n                      <div className=\"absolute top-0 left-0 right-0 h-0.5 sm:h-1 bg-gray-700 rounded-t\">\n                        <div\n                          className=\"h-full bg-yellow-500 rounded-t transition-all duration-1000\"\n                          style={{ width: `${getScavengeProgress(location)}%` }}\n                        />\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"w-full h-full rounded-md bg-gray-800 flex items-center justify-center text-2xl sm:text-4xl opacity-50 animate-pulse border border-gray-700\"></div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-950 text-white font-outfit antialiased relative overflow-hidden\">\n      <Notifications />\n      \n      <div \n        className=\"fixed inset-0 z-0 opacity-10 pointer-events-none\" \n        style={{ \n          backgroundImage: `url('https://www.transparenttextures.com/patterns/dust-and-stones.png')`, \n          backgroundSize: 'cover',\n          backgroundAttachment: 'fixed'\n        }}\n      ></div>\n      \n      {!isGameOver && (\n        <>\n          {isMobile ? (\n            <div className=\"relative z-10 px-2 py-4 h-screen flex flex-col bg-gray-950 bg-opacity-95 pointer-events-auto\">\n              <h1 className=\"text-3xl font-black text-center mb-4 text-white drop-shadow-lg leading-tight tracking-tight\">\n                Wasteland\n                <br />\n                Survivor\n              </h1>\n              <div className=\"flex mb-4 bg-gray-800 rounded-lg p-1 shadow-inner border border-gray-700\">\n                <button\n                  onClick={() => setActiveTab(\"resources\")}\n                  className={`flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${\n                    activeTab === \"resources\"\n                      ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"\n                  }`}\n                >\n                  Resources\n                </button>\n                <button\n                  onClick={() => setActiveTab(\"map\")}\n                  className={`flex-1 py-2 px-3 rounded-md text-base font-bold transition-all duration-300 ${\n                    activeTab === \"map\"\n                      ? \"bg-gradient-to-r from-blue-600 to-blue-800 text-white\" : \"text-gray-400 hover:text-white hover:bg-gray-700\"\n                  }`}\n                >\n                  Map\n                </button>\n              </div>\n              {activeTab === \"resources\" ? (\n                <ResourcePanel\n                  resources={resources}\n                  upgrades={upgrades}\n                  autoScavengeEnabled={autoScavengeEnabled}\n                  purchaseUpgrade={purchaseUpgrade}\n                  setAutoScavengeEnabled={setAutoScavengeEnabled}\n                  availableBuildings={availableBuildings}\n                />\n              ) : (\n                <div className=\"flex-1 overflow-hidden\">\n                  <MapView\n                    buildings={buildings}\n                    availableBuildings={availableBuildings}\n                    setBuildings={setBuildings}\n                    setResources={setResources}\n                    locations={locations}\n                    showAttackedAnimation={showAttackedAnimation}\n                  />\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"relative z-10 flex h-screen p-8 gap-8 bg-gray-950 bg-opacity-95\">\n              <div className=\"w-1/2 flex flex-col\">\n                <h1 className=\"text-5xl font-black mb-8 text-white drop-shadow-lg leading-tight text-center tracking-tight\">\n                  Wasteland\n                  <br />\n                  Survivor\n                </h1>\n                <ResourcePanel\n                  resources={resources}\n                  upgrades={upgrades}\n                  autoScavengeEnabled={autoScavengeEnabled}\n                  purchaseUpgrade={purchaseUpgrade}\n                  setAutoScavengeEnabled={setAutoScavengeEnabled}\n                  availableBuildings={availableBuildings}\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col h-full\">\n                <MapView\n                  buildings={buildings}\n                  availableBuildings={availableBuildings}\n                  setBuildings={setBuildings}\n                  setResources={setResources}\n                  locations={locations}\n                  showAttackedAnimation={showAttackedAnimation}\n                />\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n      {!isGameOver && !isFirstTimeUser && (\n        <button\n          onClick={() => setShowHowToPlay(true)}\n          className=\"fixed bottom-4 right-4 px-6 py-3 rounded-lg text-lg font-bold uppercase tracking-wider transition-all duration-300 transform hover:scale-105 shadow-md bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white z-40\"\n        >\n          How to Play\n        </button>\n      )}\n\n      {(showRadialMenu || showDisaster || scavengeResult || showAttackResult || showAIAttack || isGameOver || isFirstTimeUser || showHowToPlay) && (\n        <div \n          className=\"fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center pointer-events-auto\" \n          onClick={(e) => { \n            if (e.target === e.currentTarget) {\n              setShowRadialMenu(false);\n              setShowDisaster(null);\n              setScavengeResult(null);\n              setShowAttackResult(null);\n              setShowAIAttack(null);\n              setShowHowToPlay(false);\n            }\n          }}\n        >\n          <RadialMenu />\n          <DisasterPopup />\n          <ScavengePopup />\n          <AttackResultPopup />\n          <AIAttackPopup />\n          <GameOver />\n          <NewGame />\n          <HowToPlay />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ApocalypticGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}